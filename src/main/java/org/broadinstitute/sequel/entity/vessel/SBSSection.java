package org.broadinstitute.sequel.entity.vessel;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * A section is typically a set of wells in a plate, or positions in a rack.
 */
public enum SBSSection {
    ALL96("ALL96", Arrays.asList(
            VesselPosition.A01,
            VesselPosition.A02,
            VesselPosition.A03,
            VesselPosition.A04,
            VesselPosition.A05,
            VesselPosition.A06,
            VesselPosition.A07,
            VesselPosition.A08,
            VesselPosition.A09,
            VesselPosition.A10,
            VesselPosition.A11,
            VesselPosition.A12,
            VesselPosition.B01,
            VesselPosition.B02,
            VesselPosition.B03,
            VesselPosition.B04,
            VesselPosition.B05,
            VesselPosition.B06,
            VesselPosition.B07,
            VesselPosition.B08,
            VesselPosition.B09,
            VesselPosition.B10,
            VesselPosition.B11,
            VesselPosition.B12,
            VesselPosition.C01,
            VesselPosition.C02,
            VesselPosition.C03,
            VesselPosition.C04,
            VesselPosition.C05,
            VesselPosition.C06,
            VesselPosition.C07,
            VesselPosition.C08,
            VesselPosition.C09,
            VesselPosition.C10,
            VesselPosition.C11,
            VesselPosition.C12,
            VesselPosition.D01,
            VesselPosition.D02,
            VesselPosition.D03,
            VesselPosition.D04,
            VesselPosition.D05,
            VesselPosition.D06,
            VesselPosition.D07,
            VesselPosition.D08,
            VesselPosition.D09,
            VesselPosition.D10,
            VesselPosition.D11,
            VesselPosition.D12,
            VesselPosition.E01,
            VesselPosition.E02,
            VesselPosition.E03,
            VesselPosition.E04,
            VesselPosition.E05,
            VesselPosition.E06,
            VesselPosition.E07,
            VesselPosition.E08,
            VesselPosition.E09,
            VesselPosition.E10,
            VesselPosition.E11,
            VesselPosition.E12,
            VesselPosition.F01,
            VesselPosition.F02,
            VesselPosition.F03,
            VesselPosition.F04,
            VesselPosition.F05,
            VesselPosition.F06,
            VesselPosition.F07,
            VesselPosition.F08,
            VesselPosition.F09,
            VesselPosition.F10,
            VesselPosition.F11,
            VesselPosition.F12,
            VesselPosition.G01,
            VesselPosition.G02,
            VesselPosition.G03,
            VesselPosition.G04,
            VesselPosition.G05,
            VesselPosition.G06,
            VesselPosition.G07,
            VesselPosition.G08,
            VesselPosition.G09,
            VesselPosition.G10,
            VesselPosition.G11,
            VesselPosition.G12,
            VesselPosition.H01,
            VesselPosition.H02,
            VesselPosition.H03,
            VesselPosition.H04,
            VesselPosition.H05,
            VesselPosition.H06,
            VesselPosition.H07,
            VesselPosition.H08,
            VesselPosition.H09,
            VesselPosition.H10,
            VesselPosition.H11,
            VesselPosition.H12
    )),
    // Columns 1-6 of a 96 well plate, ordered by row; source for transfer into Fluidigm chip
    P96COLS1_6BYROW("P96COLS1-6BYROW", Arrays.asList(
            VesselPosition.A01,
            VesselPosition.A02,
            VesselPosition.A03,
            VesselPosition.A04,
            VesselPosition.A05,
            VesselPosition.A06,
            VesselPosition.B01,
            VesselPosition.B02,
            VesselPosition.B03,
            VesselPosition.B04,
            VesselPosition.B05,
            VesselPosition.B06,
            VesselPosition.C01,
            VesselPosition.C02,
            VesselPosition.C03,
            VesselPosition.C04,
            VesselPosition.C05,
            VesselPosition.C06,
            VesselPosition.D01,
            VesselPosition.D02,
            VesselPosition.D03,
            VesselPosition.D04,
            VesselPosition.D05,
            VesselPosition.D06,
            VesselPosition.E01,
            VesselPosition.E02,
            VesselPosition.E03,
            VesselPosition.E04,
            VesselPosition.E05,
            VesselPosition.E06,
            VesselPosition.F01,
            VesselPosition.F02,
            VesselPosition.F03,
            VesselPosition.F04,
            VesselPosition.F05,
            VesselPosition.F06,
            VesselPosition.G01,
            VesselPosition.G02,
            VesselPosition.G03,
            VesselPosition.G04,
            VesselPosition.G05,
            VesselPosition.G06,
            VesselPosition.H01,
            VesselPosition.H02,
            VesselPosition.H03,
            VesselPosition.H04,
            VesselPosition.H05,
            VesselPosition.H06
    )),
    // Columns 4-6 of a 384 well plate, ordered by row; sample inputs for a Fluidigm 48.48 chip
    P384COLS4_6BYROW("P384COLS4-6BYROW", Arrays.asList(
            VesselPosition.A04,
            VesselPosition.A05,
            VesselPosition.A06,
            VesselPosition.B04,
            VesselPosition.B05,
            VesselPosition.B06,
            VesselPosition.C04,
            VesselPosition.C05,
            VesselPosition.C06,
            VesselPosition.D04,
            VesselPosition.D05,
            VesselPosition.D06,
            VesselPosition.E04,
            VesselPosition.E05,
            VesselPosition.E06,
            VesselPosition.F04,
            VesselPosition.F05,
            VesselPosition.F06,
            VesselPosition.G04,
            VesselPosition.G05,
            VesselPosition.G06,
            VesselPosition.H04,
            VesselPosition.H05,
            VesselPosition.H06,
            VesselPosition.I04,
            VesselPosition.I05,
            VesselPosition.I06,
            VesselPosition.J04,
            VesselPosition.J05,
            VesselPosition.J06,
            VesselPosition.K04,
            VesselPosition.K05,
            VesselPosition.K06,
            VesselPosition.L04,
            VesselPosition.L05,
            VesselPosition.L06,
            VesselPosition.M04,
            VesselPosition.M05,
            VesselPosition.M06,
            VesselPosition.N04,
            VesselPosition.N05,
            VesselPosition.N06,
            VesselPosition.O04,
            VesselPosition.O05,
            VesselPosition.O06,
            VesselPosition.P04,
            VesselPosition.P05,
            VesselPosition.P06
    )),
    // Sage DNA sizing cassette
    COL1ODDROWS("COL1ODDROWS", Arrays.asList(
            VesselPosition.A01,
            VesselPosition.C01,
            VesselPosition.E01,
            VesselPosition.G01
    )),
    // Source for transfer into Sage
    FIRST4("FIRST4", Arrays.asList(
            VesselPosition.A01,
            VesselPosition.B01,
            VesselPosition.C01,
            VesselPosition.D01
    )),
    // 12 tips, at intervals of 3 wells, starting at A1, i.e. A1, A4, A7, A10, D1 etc.
    S12TIP3INTERVALA1("12TIP3INTERVALA1", Arrays.asList(
            VesselPosition.A01,
            VesselPosition.A04,
            VesselPosition.A07,
            VesselPosition.A10,
            VesselPosition.D01,
            VesselPosition.D04,
            VesselPosition.D07,
            VesselPosition.D10,
            VesselPosition.G01,
            VesselPosition.G04,
            VesselPosition.G07,
            VesselPosition.G10
    )),
    // 12 tips, at intervals of 3 wells, starting at A2, i.e. A2, A5, A8, A11, D2 etc.
    S12TIP3INTERVALA2("12TIP3INTERVALA2", Arrays.asList(
            VesselPosition.A02,
            VesselPosition.A05,
            VesselPosition.A08,
            VesselPosition.A11,
            VesselPosition.D02,
            VesselPosition.D05,
            VesselPosition.D08,
            VesselPosition.D11,
            VesselPosition.G02,
            VesselPosition.G05,
            VesselPosition.G08,
            VesselPosition.G11
    )),
    // 12 tips, at intervals of 3 wells, starting at B1, i.e. B1, B4, B7, B10, E1 etc.
    S12TIP3INTERVALB1("12TIP3INTERVALB1", Arrays.asList(
            VesselPosition.B01,
            VesselPosition.B04,
            VesselPosition.B07,
            VesselPosition.B10,
            VesselPosition.E01,
            VesselPosition.E04,
            VesselPosition.E07,
            VesselPosition.E10,
            VesselPosition.H01,
            VesselPosition.H04,
            VesselPosition.H07,
            VesselPosition.H10
    )),
    // 12 tips, at intervals of 3 wells, starting at B2, i.e. B2, B5, B8, B11, E2 etc.
    S12TIP3INTERVALB2("12TIP3INTERVALB2", Arrays.asList(
            VesselPosition.B02,
            VesselPosition.B05,
            VesselPosition.B08,
            VesselPosition.B11,
            VesselPosition.E02,
            VesselPosition.E05,
            VesselPosition.E08,
            VesselPosition.E11,
            VesselPosition.H02,
            VesselPosition.H05,
            VesselPosition.H08,
            VesselPosition.H11
    )),
    // 24 tips, at intervals of 2 wells, starting at A1, i.e. A1, A3, A5, A7, A9, A11, C1 etc.
    S24TIP2INTERVALA1("24TIP2INTERVALA1", Arrays.asList(
            VesselPosition.A01,
            VesselPosition.A03,
            VesselPosition.A05,
            VesselPosition.A07,
            VesselPosition.A09,
            VesselPosition.A11,
            VesselPosition.C01,
            VesselPosition.C03,
            VesselPosition.C05,
            VesselPosition.C07,
            VesselPosition.C09,
            VesselPosition.C11,
            VesselPosition.E01,
            VesselPosition.E03,
            VesselPosition.E05,
            VesselPosition.E07,
            VesselPosition.E09,
            VesselPosition.E11,
            VesselPosition.G01,
            VesselPosition.G03,
            VesselPosition.G05,
            VesselPosition.G07,
            VesselPosition.G09,
            VesselPosition.G11
    )),
    // 24 tips, at intervals of 2 wells, starting at A2, i.e. A2, A4, A6, A8, A10, A12, C2 etc.
    S24TIP2INTERVALA2("24TIP2INTERVALA2", Arrays.asList(
            VesselPosition.A02,
            VesselPosition.A04,
            VesselPosition.A06,
            VesselPosition.A08,
            VesselPosition.A10,
            VesselPosition.A12,
            VesselPosition.C02,
            VesselPosition.C04,
            VesselPosition.C06,
            VesselPosition.C08,
            VesselPosition.C10,
            VesselPosition.C12,
            VesselPosition.E02,
            VesselPosition.E04,
            VesselPosition.E06,
            VesselPosition.E08,
            VesselPosition.E10,
            VesselPosition.E12,
            VesselPosition.G02,
            VesselPosition.G04,
            VesselPosition.G06,
            VesselPosition.G08,
            VesselPosition.G10,
            VesselPosition.G12
    )),
    // 24 tips, at intervals of 2 wells, starting at B1, i.e. B1, B3, B5, B7, B9, B11, D1 etc.
    S24TIP2INTERVALB1("24TIP2INTERVALB1", Arrays.asList(
            VesselPosition.B01,
            VesselPosition.B03,
            VesselPosition.B05,
            VesselPosition.B07,
            VesselPosition.B09,
            VesselPosition.B11,
            VesselPosition.D01,
            VesselPosition.D03,
            VesselPosition.D05,
            VesselPosition.D07,
            VesselPosition.D09,
            VesselPosition.D11,
            VesselPosition.F01,
            VesselPosition.F03,
            VesselPosition.F05,
            VesselPosition.F07,
            VesselPosition.F09,
            VesselPosition.F11,
            VesselPosition.H01,
            VesselPosition.H03,
            VesselPosition.H05,
            VesselPosition.H07,
            VesselPosition.H09,
            VesselPosition.H11
    )),
    // 24 tips, at intervals of 2 wells, starting at B2, i.e. B2, B4, B6, B8, B10, B12, D2 etc.
    S24TIP2INTERVALB2("24TIP2INTERVALB2", Arrays.asList(
            VesselPosition.B02,
            VesselPosition.B04,
            VesselPosition.B06,
            VesselPosition.B08,
            VesselPosition.B10,
            VesselPosition.B12,
            VesselPosition.D02,
            VesselPosition.D04,
            VesselPosition.D06,
            VesselPosition.D08,
            VesselPosition.D10,
            VesselPosition.D12,
            VesselPosition.F02,
            VesselPosition.F04,
            VesselPosition.F06,
            VesselPosition.F08,
            VesselPosition.F10,
            VesselPosition.F12,
            VesselPosition.H02,
            VesselPosition.H04,
            VesselPosition.H06,
            VesselPosition.H08,
            VesselPosition.H10,
            VesselPosition.H12
    ));
    
    private final String sectionName;
    private List<VesselPosition> wells = new ArrayList<VesselPosition>();
    private static Map<String, SBSSection> mapNameToSection = new HashMap<String, SBSSection>();
    static {
        for (SBSSection sbsSection : SBSSection.values()) {
            mapNameToSection.put(sbsSection.getSectionName(), sbsSection);
        }
    }

    SBSSection(String sectionName, List<VesselPosition> wells) {
        this.sectionName = sectionName;
        this.wells = wells;
    }

    public String getSectionName() {
        return sectionName;
    }

    public List<VesselPosition> getWells() {
        return wells;
    }

    public static SBSSection getBySectionName(String sectionName) {
        return mapNameToSection.get(sectionName);
    }
}
