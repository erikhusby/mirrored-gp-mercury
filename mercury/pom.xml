<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>Mercury</groupId>
    <artifactId>Mercury</artifactId>
    <version>1.15-SNAPSHOT</version>
    <packaging>war</packaging>
    <inceptionYear>2012</inceptionYear>

    <!-- uncomment this to enable squid integration.
    copy your local squid_app subdirs to the "mercury"
    directory -->
    <!--
    <parent>
        <groupId>edu.mit.broad</groupId>
        <artifactId>prodinfo</artifactId>
        <version>1.2-SNAPSHOT</version>
        <relativePath>../prodinfo/pom.xml</relativePath>
    </parent>
    -->

    <name>Mercury</name>
    <description>The next generation Squid.</description>

    <url>${site.url}/${project.artifactId}</url>

    <issueManagement>
        <system>Jira</system>
        <url>${jira.url}</url>
    </issueManagement>

    <ciManagement>
        <system>Bamboo</system>
        <url>${bamboo.url}</url>
    </ciManagement>

    <scm>
        <connection>scm:git|${git.url}</connection>
        <developerConnection>scm:git|${git.url}</developerConnection>
        <url>${git.browseUrl}</url>
      <tag>HEAD</tag>
  </scm>

    <distributionManagement>
        <site>
            <id>${project.artifactId}.website</id>
            <name>${project.name} Website</name>
            <url>file://${site.path}/${project.artifactId}</url>
        </site>
    </distributionManagement>

    <developers>
        <developer>
            <name>Andrew Zimmer</name>
            <email>andrew@broadinstitute.org</email>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <repositories>
        <repository>
            <id>Prodinfo Maven</id>
            <name>Prodinfo's Maven2 Custom Repository</name>
            <layout>default</layout>
            <url>http://prodinfosvn.broadinstitute.org:8000/m2-repository</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>Broad Maven</id>
            <name>Broad's Maven Repository</name>
            <layout>default</layout>
            <url>http://maven.broadinstitute.org/maven</url>
        </repository>

        <!-- JBoss Repository for Arquillian, Hibernate, etc. -->
        <repository>
            <id>JBoss</id>
            <name>JBoss Repository</name>
            <url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>

        <!-- For Arquillian-JRebel -->
<!--
        <repository>
            <id>Arquillian-JRebel snapshots</id>
            <name>libs-snapshot</name>
            <url>http://artifactory.it-crowd.com.pl/libs-snapshot</url>
            <snapshots />
        </repository>
-->

        <!-- PrimeFaces Repository for PrimeFaces and themes -->
        <repository>
            <id>prime-repo</id>
            <name>PrimeFaces Maven Repository</name>
            <url>http://repository.primefaces.org</url>
            <layout>default</layout>
        </repository>

        <repository>
            <id>Sonatype-public</id>
            <name>SnakeYAML repository</name>
            <url>http://oss.sonatype.org/content/groups/public/</url>
        </repository>

    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Maven Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </pluginRepository>

            <pluginRepository>
              <id>apache.snapshots</id>
              <url>http://repository.apache.org/snapshots/</url>
            </pluginRepository>
    </pluginRepositories>

    <properties>
        <!-- Clover -->
        <clover.version>3.1.8</clover.version>
        <clover.plugin.version>3.1.8</clover.plugin.version>
        <clover.targetPercentage>15%</clover.targetPercentage>

        <!-- For site reports -->
        <jira.url>http://prodinfojira.broadinstitute.org:8080/jira</jira.url>
        <bamboo.url>http://prodinfobuild.broadinstitute.org:8085</bamboo.url>

        <!-- git clone ssh://git@stash.broadinstitute.org:7999/GPIN/mercury.git -->
        <git.url>ssh://git@stash.broadinstitute.org:7999/GPIN/mercury.git</git.url>
        <!-- 2012-09-23 MLC currently this is still pointed to the old Stash repo but Systems should be fixing this -->
        <git.browseUrl>https://crucible.broadinstitute.org/browse/GPInformatics</git.browseUrl>

        <site.url>http://prodinfosvn.broadinstitute.org:8000/m2-projects</site.url>
        <site.path>/prodinfo/releng/m2-projects</site.path>

        <seam.version>3.1.0.Final</seam.version>
        <jersey.version>1.11</jersey.version>

        <oracle.version>6-11.2.0.1.0</oracle.version>
        <postgresql.version>9.1-901.jdbc4</postgresql.version>

        <jbossas_7.version>7.1.1.Final</jbossas_7.version>

        <!-- In order to ignore the UI tests by default but turn them on in the Tests.UI profile, we need to do this
        by using properties. The Tests.UI profile basically reverses these properties. Doing this from the command line
        was not really possible.
        -->
        <tests.excludedGroups>UI</tests.excludedGroups>
        <tests.groups />

        <build.resultKey>${project.version}</build.resultKey>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
        <build.buildTimeStamp>${maven.build.timestamp}</build.buildTimeStamp>

        <!-- Default Postgres Database settings for Liquibase and Maven SQL Plugin-->
        <database>postgres</database>
        <database.driver>org.postgresql.Driver</database.driver>
        <database.url>jdbc:postgresql://localhost/postgres</database.url>
        <mercury.password>mercury_local</mercury.password>
        <athena.password>athena_local</athena.password>
        <database.delimiterType>normal</database.delimiterType>

        <mercury.rc.ip>must be specified.</mercury.rc.ip>

    </properties>

    <profiles>
        <profile>
            <id>Clover.report</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                        <configuration>
                            <cloverDatabase>${project.build.directory}/clover/clover.db</cloverDatabase>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <includesAllSourceRoots>false</includesAllSourceRoots>
                            <targetPercentage>${clover.targetPercentage}</targetPercentage>
                            <excludes>
                                <exclude>**/generated/*.java</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>instrument</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>clover</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                    <goal>clover</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
             <reporting>
                 <plugins>
                     <plugin>
                         <groupId>com.atlassian.maven.plugins</groupId>
                         <artifactId>maven-clover2-plugin</artifactId>
                     </plugin>
                 </plugins>
             </reporting>
        </profile>
        <profile>
            <id>Clover.optimize</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                        <configuration>
                            <cloverDatabase>${project.build.directory}/clover/clover.db</cloverDatabase>
                            <fullRunEvery>60</fullRunEvery>
                            <snapshot>${user.home}/.clover/${project.groupId}-${project.artifactId}/clover.snapshot</snapshot>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <includesAllSourceRoots>true</includesAllSourceRoots>
                        </configuration>
                        <executions>
                            <execution>
                                <id>clover</id>
                                <goals>
                                    <goal>setup</goal>
                                    <goal>optimize</goal>
                                    <goal>snapshot</goal>
                                    <goal>save-history</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Clover.All</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                        <configuration>
                            <cloverDatabase>${project.build.directory}/clover/clover.db</cloverDatabase>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <includesAllSourceRoots>false</includesAllSourceRoots>
                            <targetPercentage>${clover.targetPercentage}</targetPercentage>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>instrument</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Clover.site</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                        <configuration>
                            <cloverDatabase>${project.build.directory}/clover/clover.db</cloverDatabase>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <includesAllSourceRoots>false</includesAllSourceRoots>
                            <targetPercentage>${clover.targetPercentage}</targetPercentage>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>instrument</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                    <goal>log</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>site</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>save-history</goal>
                                    <goal>reset</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                        <version>${clover.plugin.version}</version>
                        <configuration>
                            <cloverDatabase>${project.build.directory}/clover/clover.db</cloverDatabase>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <generateHistorical>true</generateHistorical>
                            <generateHtml>true</generateHtml>
                            <generateXml>true</generateXml>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <!-- schemagen generates XSDs from JAX-RS DTOs.  schemagen and clover seem to interfere, so schemagen must be run separately -->
            <id>Jaxb.schemagen</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>jaxb2-maven-plugin</artifactId>
                        <version>1.4</version>
                        <executions>
                            <execution>
                                <id>LabEventSchemaGen</id>
                                <goals>
                                    <goal>schemagen</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/Namespaces.java</include>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/labevent/*Bean.java</include>
                                    </includes>
                                    <transformSchemas>
                                        <!--
                                            Each schema element defines:

                                            a) A <<namespace uri>> for one of your namespaces.
                                               This namespace uri must be unique within the schemas element.

                                            b) A <<toPrefix>> that you want to use for the namespace.
                                               Should not contain whitespace or exotic characters.
                                               This yields a namespace definition on the form
                                               <xs:schema ... xmlns:[toPrefix]="[uri]" ... />

                                               (I.e: <xs:schema ... xmlns:some="http://some/namespace" xmlns:xs="http://www.w3.org/2001/XMLSchema"> )

                                               ... and transforms relevant xml schema elements to use the provided namespace prefix:

                                               <some:elementName ... />

                                            c) The desired <<toFile>> name of the generated XML schema definition file,
                                               excluding the ".xsd" suffix (which will be added automatically).
                                        -->
                                        <transformSchema>
                                            <uri>http://broadinstitute.org/gpinformatics/mercury/labevent</uri>
                                            <!--
                                            <toPrefix>labevent</toPrefix>
                                            -->
                                            <toFile>labevent.xsd</toFile>
                                        </transformSchema>
                                    </transformSchemas>
                                </configuration>
                            </execution>
                            <execution>
                                <id>VesselSchemaGen</id>
                                <goals>
                                    <goal>schemagen</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/Namespaces.java</include>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/vessel/*Bean.java</include>
                                    </includes>
                                    <transformSchemas>
                                        <transformSchema>
                                            <uri>http://broadinstitute.org/gpinformatics/mercury/vessel</uri>
                                            <!--
                                            <toPrefix>labevent</toPrefix>
                                            -->
                                            <toFile>vessel.xsd</toFile>
                                        </transformSchema>
                                    </transformSchemas>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
            <profile>
                <id>Tests.ExternalIntegration</id>
                <build>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <!-- "arquillian" test group is used by Arquillian itself and needs to be active to run Arquillian tests -->
                            <configuration>
                                <groups>arquillian, ExternalIntegration</groups>
                            </configuration>
                        </plugin>

                    </plugins>
                </build>
            </profile>

            <profile>
                <id>Tests.DatabaseFree</id>
                <build>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <configuration>
                                <groups>DatabaseFree</groups>
                                <parallel>methods</parallel>
                                <threadCount>10</threadCount>
                            </configuration>
                        </plugin>
                    </plugins>
                </build>

            </profile>
            <profile>
                <id>Tests.Parallel</id>
                <build>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <configuration>
                                <excludedGroups>UI</excludedGroups>
                                <runOrder>failedFirst</runOrder>
                                <parallel>methods</parallel>
                                <threadCount>10</threadCount>
                            </configuration>
                        </plugin>
                    </plugins>
                </build>
            </profile>

        <!-- This profile is use to only run the UI Tests. -->
            <profile>
                <id>Tests.UI</id>
                <properties>
                    <tests.excludedGroups />
                    <tests.groups>UI,arquillian</tests.groups>
                </properties>
            </profile>
        <!-- default Java EE profile to include Java EE API dependencies in the absence of a specific container -->
        <profile>
            <id>JavaEE</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>javax</groupId>
                    <artifactId>javaee-api</artifactId>
                    <version>6.0</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>Arquillian-Weld</id>
            <dependencies>
                <!-- For Arquillian Weld embedded, use org.jboss.spec:jboss-javaee-6.0 in lieu of javax:javaee-api.
                     see: https://community.jboss.org/wiki/WhatsTheCauseOfThisExceptionJavalangClassFormatErrorAbsentCode
                -->
                <dependency>
                    <groupId>org.jboss.spec</groupId>
                    <artifactId>jboss-javaee-6.0</artifactId>
                    <version>1.0.0.Final</version>
                    <type>pom</type>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
                    <version>1.0.0.CR3</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.weld</groupId>
                    <artifactId>weld-core</artifactId>
                    <version>1.1.7.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                    <version>1.6.4</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>Arquillian-JBossAS7-Managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.spec</groupId>
                    <artifactId>jboss-javaee-6.0</artifactId>
                    <version>1.0.0.Final</version>
                    <type>pom</type>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-managed</artifactId>
                    <version>${jbossas_7.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.protocol</groupId>
                    <artifactId>arquillian-protocol-servlet</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <argLine>-Xmx2048m</argLine>
                            <systemProperties>
                                <jboss.version>${jbossas_7.version}</jboss.version>
                            </systemProperties>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.jboss.as</groupId>
                                            <artifactId>jboss-as-dist</artifactId>
                                            <version>${jbossas_7.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Arquillian-JBossAS7-Remote</id>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.spec</groupId>
                    <artifactId>jboss-javaee-6.0</artifactId>
                    <version>1.0.0.Final</version>
                    <type>pom</type>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-remote</artifactId>
                    <version>${jbossas_7.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>DEV</id>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-dev</directory>
                    </testResource>
                    <testResource>
                        <directory>src/main/webapp/WEB-INF/classes</directory>
                        <includes>
                            <include>mercury-config.yaml</include>
                        </includes>
                    </testResource>
                </testResources>
            </build>
        </profile>


        <profile>
            <id>CLOUD28</id>
            <properties>
                <!--  Oracle Dev database -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@192.168.195.28:1521:gpinfprd</database.url>
                <mercury.password>guest</mercury.password>
                <athena.password>guest</athena.password>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-build</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/main/webapp/WEB-INF/classes</directory>
                        <includes>
                            <include>mercury-config.yaml</include>
                        </includes>
                    </testResource>
                </testResources>
	        </build>
        </profile>

        <profile>
            <id>HOW</id>
            <properties>
                <!--  Oracle Dev database -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@192.168.195.32:1521:gpinfprd</database.url>
                <mercury.password>guest</mercury.password>
                <athena.password>guest</athena.password>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-build</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/main/webapp/WEB-INF/classes</directory>
                        <includes>
                            <include>mercury-config.yaml</include>
                        </includes>
                    </testResource>
                </testResources>
	        </build>
        </profile>

        <profile>
            <id>pshapiro</id>
            <properties>
                <!--  Oracle Dev database -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@192.168.195.19:1521:gpinfprd</database.url>
                <mercury.password>guest</mercury.password>
                <athena.password>guest</athena.password>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-build</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/main/webapp/WEB-INF/classes</directory>
                        <includes>
                            <include>mercury-config.yaml</include>
                        </includes>
                    </testResource>
                </testResources>
	        </build>
        </profile>
        <profile>
            <id>SCOTT</id>
            <properties>
                <!--  Oracle Dev database -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@192.168.195.13:1521:gpinfprd</database.url>
                <mercury.password>guest</mercury.password>
                <athena.password>guest</athena.password>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-build</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/main/webapp/WEB-INF/classes</directory>
                        <includes>
                            <include>mercury-config.yaml</include>
                        </includes>
                    </testResource>
                </testResources>
	        </build>
        </profile>

        <profile>
            <id>BUILD</id>
            <properties>
                <!--  Oracle Dev database -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@vmgpinform:1521:gpinfdev</database.url>
                <mercury.password>mercury_dev</mercury.password>
                <athena.password>athena_dev</athena.password>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-build</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/main/webapp/WEB-INF/classes</directory>
                        <includes>
                            <include>mercury-config.yaml</include>
                        </includes>
                    </testResource>
                </testResources>
	        </build>
        </profile>
        <profile>
            <id>RC</id>
            <properties>
                <!--  Oracle Dev database -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <!--<database.url>jdbc:oracle:thin:@mercuryrc.cloud.broad:1521:gpinfprd</database.url>-->
                <database.url>jdbc:oracle:thin:@${mercury.rc.ip}:1521:gpinfprd</database.url>
                <mercury.password>guest</mercury.password>
                <athena.password>guest</athena.password>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-rc</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/main/webapp/WEB-INF/classes</directory>
                        <includes>
                            <include>mercury-config.yaml</include>
                        </includes>
                    </testResource>
                </testResources>
	        </build>
        </profile>

        <profile>
            <id>QA</id>
            <properties>
                <!-- Oracle Dev -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@gpinfqa:1521:gpinfqa</database.url>
                <mercury.password>mercury_qa</mercury.password>
                <athena.password>athena_qa</athena.password>
            </properties>
        </profile>
        <profile>
            <id>PROD</id><!-- THis is for PRODUCTION ONLY -->
            <properties>
                <!-- Oracle Dev -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@gpinfoprod:1521:gpinfprd</database.url>
                <mercury.password>mercury_prod</mercury.password>
                <athena.password>athena_prod</athena.password>
            </properties>
            <build>
                <!-- This allows us to overwrite the ejb-jar.xml for development with the special version for production -->
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.2</version>
                        <configuration>
                            <webResources>
                                <resource>
                                    <directory>src/main/webapp-prod</directory>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Liquibase</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <version>2.0.5</version>
                        <executions>
                            <execution>
                                <id>Mercury</id>
                                <phase>process-resources</phase>
                                <configuration>
                                    <changeLogFile>src/main/db/mercurydb.changelog-1.0.xml</changeLogFile>
                                    <driver>${database.driver}</driver>
                                    <url>${database.url}</url>
                                    <username>mercury</username>
                                    <password>${mercury.password}</password>
                                    <defaultSchemaName>mercury</defaultSchemaName>
                                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                                </configuration>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>Athena</id>
                                <phase>process-resources</phase>
                                <configuration>
                                    <changeLogFile>src/main/db/athenadb.changelog-1.0.xml</changeLogFile>
                                    <driver>${database.driver}</driver>
                                    <url>${database.url}</url>
                                    <username>athena</username>
                                    <password>${athena.password}</password>
                                    <defaultSchemaName>athena</defaultSchemaName>
                                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                                </configuration>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>com.oracle</groupId>
                                <artifactId>ojdbc</artifactId>
                                <version>${oracle.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <driver>${database.driver}</driver>
                            <url>${database.url}</url>
                            <username>athena</username>
                            <password>${athena.password}</password>
                        </configuration>
                        <executions>
                            <execution>
                                <id>Apply Athena Grants</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <delimiterType>${database.delimiterType}</delimiterType>
                                    <srcFiles>
                                        <srcFile>src/main/db/athena-${database}-grants.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>

        <dependencies>
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-bundle</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.jersey.contribs</groupId>
                <artifactId>jersey-multipart</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.0.3.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-bom</artifactId>
                <version>1.0.0.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- this is needed for any seam 3 dependencies to work -->
<!--
            <dependency>
                <groupId>org.jboss.seam</groupId>
                <artifactId>seam-bom</artifactId>
                <version>${seam.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
-->
            <dependency>
                <groupId>org.primefaces.extensions</groupId>
                <artifactId>primefaces-extensions</artifactId>
                <version>0.6.1</version>
            </dependency>

            <!-- primefaces-extensions has a dependency on primefaces, so use this to control the version of primefaces we depend on -->
            <!-- see: http://code.google.com/p/primefaces-extensions/wiki/GettingStarted -->
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces</artifactId>
                <version>3.4.1</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.1.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
        	<groupId>org.hamcrest</groupId>
        	<artifactId>hamcrest-all</artifactId>
        	<version>1.1</version>
            <scope>test</scope>
        </dependency>

        <!-- uncomment this to enable squid integration -->
        <!--
        <dependency>

            <groupId>Squid</groupId>
            <artifactId>SquidEntities</artifactId>
            <version>${build.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>edu.mit.broad.prodinfo</groupId>
            <artifactId>squidServices</artifactId>
            <version>${build.version}</version>
        </dependency>
        -->

        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-api-maven</artifactId>
            <version>1.1.0-alpha-3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <version>1.1.0-alpha-3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-impl</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-selenium</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-webdriver</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-selenium-server</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>2.21.0</version>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-server</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api-2.5</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

<!-- ???
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
-->

<!-- not really ready yet. following https://community.jboss.org/thread/197981
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-jrebel-impl</artifactId>
            <version>1.0.0.Alpha1-SNAPSHOT</version>
        </dependency>
-->
        <dependency>
            <groupId>net.sourceforge.stripes</groupId>
            <artifactId>stripes</artifactId>
            <version>1.5.7</version>
        </dependency>

        <dependency>
            <groupId>com.samaxes.stripes</groupId>
            <artifactId>stripes-injection-enricher</artifactId>
            <version>1.0.2</version>
        </dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.1</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2.2</version>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.collections</groupId>
            <artifactId>collections-generic</artifactId>
            <version>4.01</version>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.9</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet</artifactId>
            <version>1.1.8.Final</version>
            <scope>provided</scope>
        </dependency>

<!--
	<dependency>
	    <groupId>com.twitter.bootstrap</groupId>
	    <artifactId>twitter-bootstrap</artifactId>
	    <version>2.1.1</version>
	    <type>zip</type>
	    <scope>runtime</scope>
	</dependency>
-->

        <dependency>
        	<groupId>org.apache.commons</groupId>
        	<artifactId>commons-lang3</artifactId>
        	<version>3.1</version>
        </dependency>

        <!-- BEGIN primefaces -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
        </dependency>

        <dependency>
            <groupId>org.primefaces.extensions</groupId>
            <artifactId>primefaces-extensions</artifactId>
        </dependency>

        <dependency>
            <groupId>org.primefaces.themes</groupId>
            <artifactId>bootstrap</artifactId>
            <version>1.0.8</version>
        </dependency>
        <!-- END primefaces -->

        <!-- BEGIN seam-faces -->
<!--
        <dependency>
            <groupId>org.jboss.seam.faces</groupId>
            <artifactId>seam-faces-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.seam.faces</groupId>
            <artifactId>seam-faces</artifactId>
            <version>3.1.0.Final</version>
            <scope>runtime</scope>
        </dependency>
-->

<!--
        <dependency>
            <groupId>org.jboss.solder</groupId>
            <artifactId>solder-api</artifactId>
            <version>3.1.1.Final</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.solder</groupId>
            <artifactId>solder-impl</artifactId>
            <version>3.1.1.Final</version>
            <scope>runtime</scope>
        </dependency>
-->

        <!-- END seam-faces -->

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.1.3.Final</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.1.3.Final</version>
            <exclusions>
                <!-- using cglib-nodep instead -->
                <exclusion>
                    <groupId>cglib</groupId>
                    <artifactId>cglib</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>1.2.0.Final</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-envers</artifactId>
            <version>4.1.3.Final</version>
        </dependency>

        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc</artifactId>
            <version>${oracle.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.3</version>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- disable when deploying to JBoss AS 7 -->
<!--
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
-->

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>lims</groupId>
            <artifactId>limsThrift</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.8</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.8</version>
        </dependency>

        <!-- exists only to be included in ShrinkWrap deployments. would be better to include explicitly in DeploymentBuilder -->
        <dependency>
            <groupId>com.cenqua.clover</groupId>
            <artifactId>clover</artifactId>
            <version>${clover.version}</version>
            <!-- cannot be test scoped because it is needed for compiling instrumented main sources -->
            <!--<scope>test</scope>-->
        </dependency>

        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <version>2.2.6</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.0.1</version>
        </dependency>


        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.7.0</version>
        </dependency>

        <dependency>
            <groupId>org.broadinstitute.bsp</groupId>
            <artifactId>bspclient</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.10</version>
        </dependency>


        <dependency>
            <groupId>com.sun.org.apache</groupId>
            <artifactId>jaxp-ri</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
        	<groupId>com.intellij</groupId>
        	<artifactId>annotations</artifactId>
        	<version>9.0.4</version>
        </dependency>

        <dependency>
            <groupId>org.meanbean</groupId>
            <artifactId>meanbean</artifactId>
            <version>2.0.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hornetq</groupId>
            <artifactId>hornetq-core-client</artifactId>
            <version>2.2.7.Final</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hornetq</groupId>
            <artifactId>hornetq-jms-client</artifactId>
            <version>2.2.7.Final</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.atlassian.maven.plugins</groupId>
                    <artifactId>maven-clover2-plugin</artifactId>
                    <version>${clover.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <!--<version>2.13-SNAPSHOT</version>-->
                    <version>2.12</version>
                </plugin>

                <plugin>
                    <groupId>com.sun.tools.xjc.maven2</groupId>
                    <artifactId>maven-jaxb-plugin</artifactId>
                    <version>1.1.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>2.7.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.3.2</version>
                </plugin>

                <plugin>
                    <groupId>org.jboss.as.plugins</groupId>
                    <artifactId>jboss-as-maven-plugin</artifactId>
                    <version>7.1.1.Final</version>
                </plugin>

                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>2.0.5</version>
                </plugin>
                <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                </plugin>
                <!--
                                <plugin>
                                    <artifactId>maven-dependency-plugin</artifactId>
                                    <executions>
                                        <execution>
                                            <id>unpack</id>
                                            <phase>process-test-classes</phase>
                                            <goals>
                                                <goal>unpack</goal>
                                            </goals>
                                            <configuration>
                                                <artifactItems>
                                                    <artifactItem>
                                                        <groupId>org.jboss.as</groupId>
                                                        <artifactId>jboss-as-dist</artifactId>
                                                        <version>7.0.2.Final</version>
                                                        <type>zip</type>
                                                        <overWrite>false</overWrite>
                                                        <outputDirectory>target</outputDirectory>
                                                    </artifactItem>
                                                </artifactItems>
                                            </configuration>
                                        </execution>
                                    </executions>
                                </plugin>
                -->


            </plugins>


        </pluginManagement>


        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerArgument>-proc:none</compilerArgument>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
                <version>2.0.5</version>
                <executions>
                    <execution>
                        <id>process</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <!-- source output directory -->
                            <outputDirectory>target/generated-sources/annotations</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/annotations</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/endorsed</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax.xml.bind</groupId>
                                    <artifactId>jaxb-api</artifactId>
                                    <version>2.2.4</version>
                                    <type>jar</type>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>javax.xml.ws</groupId>
                                    <artifactId>jaxws-api</artifactId>
                                    <version>2.2.8</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
             Configuration is a little quirky, but it's what's needed to put
             the output of different XSDs into different packages. Based on
             "Multiple schemas with different configuration" section of
             http://mojo.codehaus.org/jaxb2-maven-plugin/usage.html.
             -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>bettalims</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <!-- each execution needs to specify the schemaFile(s) to use -->
                            <schemaFiles>bettalims.xsd</schemaFiles>
                            <packageName>org.broadinstitute.gpinformatics.mercury.bettalims.generated</packageName>
                            <!-- each execution must have a unique staleFile -->
                            <staleFile>${project.build.directory}/jaxb2/.bettalimsXjcStaleFlag</staleFile>
                            <!-- all executions, except the first, need clearOutputDir set to false -->
                            <!--<clearOutputDir>false</clearOutputDir>-->
                        </configuration>
                    </execution>
                    <execution>
                        <id>LimsQuery</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <!-- each execution needs to specify the schemaFile(s) to use -->
                            <schemaFiles>LimsQueryTypes.xsd</schemaFiles>
                            <packageName>org.broadinstitute.gpinformatics.mercury.limsquery.generated</packageName>
                            <!-- each execution must have a unique staleFile -->
                            <staleFile>${project.build.directory}/jaxb2/.limsqueryXjcStaleFlag</staleFile>
                            <!-- all executions, except the first, need clearOutputDir set to false -->
                            <clearOutputDir>false</clearOutputDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <propertyExpansion>
                        checkstyle.importcontrol.file=checkstyle-import-control.xml
                        project.basedir=${project.basedir}
                    </propertyExpansion>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnViolation>false</failOnViolation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <targetJdk>1.6</targetJdk>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <id>generate-create-schema-ddl</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.broadinstitute.gpinformatics.infrastructure.jpa.EnversSchemaExport</mainClass>
                            <arguments>
                                <argument>--drop</argument>
                                <argument>--create</argument>
                                <argument>--delimiter=;</argument>
                                <argument>--output=${project.basedir}/target/generated-sources/ddl/generated_schema.sql</argument>
                                <argument>mercury_pu</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-entitymanager</artifactId>
                        <version>4.1.3.Final</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <groups>${tests.groups}</groups>
                    <excludedGroups>${tests.excludedGroups}</excludedGroups>
                    <forkMode>never</forkMode>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.jvnet.jax-ws-commons</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <id>mercury-wsimport</id>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <!-- The name of your generated source package -->
                            <packageName>org.broadinstitute.gpinformatics.mercury.boundary</packageName>
                            <wsdlDirectory>${basedir}/src/main/wsdl</wsdlDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>squid-wsimport</id>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <!-- The name of your generated source package -->
                            <packageName>org.broadinstitute.gpinformatics.mercury.boundary.squid</packageName>
                            <wsdlDirectory>${basedir}/src/main/wsdl/squid</wsdlDirectory>
                        </configuration>
                    </execution>

                </executions>


                <!-- if you want to use a specific version of JAX-WS, you can do so like this -->
                <dependencies>
                    <dependency>
                        <groupId>com.sun.xml.ws</groupId>
                        <artifactId>jaxws-tools</artifactId>
                        <version>2.1.7</version>
                        <exclusions>
                            <exclusion>
                                <groupId>org.jvnet.staxex</groupId>
                                <artifactId>stax-ex</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.jvnet.staxex</groupId>
                        <artifactId>stax-ex</artifactId>
                        <version>1.2</version>
                        <exclusions>
                            <exclusion>
                                <groupId>javax.xml.stream</groupId>
                                <artifactId>stax-api</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>


            <!--
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <configuration>
                                <includes>
                                    <include>**/org/broadinstitute/mercury/integration/**/*Test.java</include>
                                </includes>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>integration-test</goal>
                                        <goal>verify</goal>
                                    </goals>
                                 </execution>
                            </executions>
                        </plugin>
            -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
<!--
                    <docletPath>C:\java\UMLGraph-R5_5\lib\UmlGraph.jar</docletPath>
-->
                    <docletArtifact>
                        <groupId>org.umlgraph</groupId>
                        <artifactId>umlgraph</artifactId>
                        <version>5.6</version>
                    </docletArtifact>
                    <!-- Note, the following parameters must be on one line -->
                    <additionalparam>-views -inferrel -inferdep -quiet -hide java.* -collpackages java.util.* -qualify -postfixpackage -nodefontsize 9 -nodefontpackagesize 7</additionalparam>
                    <useStandardDocletOptions>true</useStandardDocletOptions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <webappDirectory>${project.build.directory}/${project.artifactId}.war</webappDirectory>
<!-- We'll keep mercury-config-local.yaml in src/main/resources for now. We can add a local directory later if needed.
                    <webResources>
                        <resource>
                            <directory>${project.basedir}/local</directory>
                            <includes>
                                <include>mercury-config-local.yaml</include>
                                <include>target/version.properties</include>
                            </includes>
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>
                    </webResources>
-->
<!--
                    <packagingExcludes>WEB-INF/classes/META-INF/persistence.xml</packagingExcludes>
-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Update Version property file for use by Bamboo</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <propertyfile file="${pom.basedir}/target/version.properties">
                                    <entry key="project.version" type="string" value="${project.version}" operation="=" />
                                    <entry key="build.buildTimeStamp" type="string" value="${build.buildTimeStamp}" operation="=" />
                                </propertyfile>
                                <propertyfile file="${pom.basedir}/target/classes/build.properties">
                                    <entry key="build.resultKey" type="string" value="${build.resultKey}" operation="=" />
                                    <entry key="build.buildTimeStamp" type="string" value="${build.buildTimeStamp}" operation="=" />
                                </propertyfile>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <preparationGoals>clean validate</preparationGoals>
                    <goals>help:active-profiles validate</goals>
                    <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
                    <useReleaseProfile>false</useReleaseProfile>
                    <scmCommentPrefix>[REL-000 Production Release] </scmCommentPrefix>
                    <!--<arguments>-X</arguments>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
            </plugin>

        </plugins>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/main/webapp/WEB-INF/classes</directory>
                <includes>
                    <include>mercury-config.yaml</include>
                </includes>
            </testResource>
        </testResources>


    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.12</version>

                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>

            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <quiet>true</quiet>
                    <minmemory>1024</minmemory>
                    <maxmemory>2048</maxmemory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <propertyExpansion>
                        checkstyle.importcontrol.file=checkstyle-import-control.xml
                        project.basedir=${project.basedir}
                    </propertyExpansion>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnViolation>false</failOnViolation>
                </configuration>
                <reportSets>
                        <reportSet>
                            <reports>
                                <report>checkstyle</report>
                            </reports>
                        </reportSet>
                    </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>2.7.1</version>
                <configuration>
                    <targetJdk>1.6</targetJdk>
                </configuration>
            </plugin>

        </plugins>
    </reporting>

</project>
