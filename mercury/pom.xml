<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>Mercury</groupId>
    <artifactId>Mercury</artifactId>
    <!-- Unfortunately (for now) there is also a rest-pom.xml.  Changes to this version should be reflected in that
    file as well until such a time that we reconfigure the mercury structure to have a dependant project or something
     that can inherit this version setting. -->

    <version>1.113.1</version>
    <packaging>war</packaging>
    <inceptionYear>2012</inceptionYear>

    <!-- uncomment this to enable squid integration.
    copy your local squid_app subdirs to the "mercury"
    directory -->
    <!--
    <parent>
        <groupId>edu.mit.broad</groupId>
        <artifactId>prodinfo</artifactId>
        <version>1.2-SNAPSHOT</version>
        <relativePath>../prodinfo/pom.xml</relativePath>
    </parent>
    -->

    <name>Mercury</name>
    <description>The next generation Squid.</description>

    <url>${site.url}/${project.artifactId}</url>

    <issueManagement>
        <system>Jira</system>
        <url>${jira.url}</url>
    </issueManagement>

    <ciManagement>
        <system>Bamboo</system>
        <url>${bamboo.url}</url>
    </ciManagement>

    <scm>
        <connection>scm:git|${git.url}</connection>
        <developerConnection>scm:git|${git.url}</developerConnection>
        <url>${git.browseUrl}</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <site>
            <id>${project.artifactId}.website</id>
            <name>${project.name} Website</name>
            <url>file://${site.path}/${project.artifactId}</url>
        </site>

        <repository>
            <id>prodinfo</id>
            <name>Broad Prodinfo</name>
            <url>file:///seq/prodinfo/m2-repository</url>
        </repository>

    </distributionManagement>

    <developers>
        <developer>
            <name>Andrew Zimmer</name>
            <email>andrew@broadinstitute.org</email>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <repositories>
        <repository>
            <id>Prodinfo Maven</id>
            <name>Prodinfo's Maven2 Custom Repository</name>
            <layout>default</layout>
            <url>http://prodinfosvn.broadinstitute.org:8000/m2-repository</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>Broad Maven</id>
            <name>Broad's Maven Repository</name>
            <layout>default</layout>
            <url>http://maven.broadinstitute.org:8000/maven</url>

        </repository>

        <!-- JBoss Repository for Arquillian, Hibernate, etc. -->
        <repository>
            <id>JBoss</id>
            <name>JBoss Repository</name>
            <url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>

        <!-- Maven central -->
        <repository>
            <id>MavenCentral</id>
            <name>Maven Central</name>
            <url>https://repo1.maven.org/maven2</url>
        </repository>

    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Maven Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </pluginRepository>

        <pluginRepository>
            <id>Prodinfo Maven</id>
            <name>Prodinfo's Maven2 Custom Repository</name>
            <layout>default</layout>
            <url>http://prodinfosvn.broadinstitute.org:8000/m2-repository</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>


        <pluginRepository>
            <id>apache.snapshots</id>
            <url>http://repository.apache.org/snapshots/</url>
        </pluginRepository>

        <pluginRepository>
            <id>MavenCentral</id>
            <name>Maven Central</name>
            <url>https://repo1.maven.org/maven2</url>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <!-- Clover -->
        <clover.version>4.1.2</clover.version>
        <clover.plugin.version>4.1.2</clover.plugin.version>
        <clover.targetPercentage>15%</clover.targetPercentage>


        <deltaspike.version>1.7.1</deltaspike.version>
        <!-- For site reports -->
        <jira.url>http://prodinfojira.broadinstitute.org:8080/jira</jira.url>
        <bamboo.url>http://prodinfobuild.broadinstitute.org:8085</bamboo.url>

        <!-- git clone ssh://git@stash.broadinstitute.org:7999/GPIN/mercury.git -->
        <git.url>ssh://git@stash.broadinstitute.org:7999/GPIN/mercury.git</git.url>
        <!-- 2012-09-23 MLC currently this is still pointed to the old Stash repo but Systems should be fixing this -->
        <git.browseUrl>https://crucible.broadinstitute.org/browse/GPInformatics</git.browseUrl>

        <site.url>http://prodinfosvn.broadinstitute.org:8000/m2-projects</site.url>
        <site.path>/prodinfo/releng/m2-projects</site.path>

        <seam.version>3.1.0.Final</seam.version>

        <oracle.version>12.1.0.2</oracle.version>

        <!-- todo jmt fix -->
        <wildfly.version>10.1.0.Final</wildfly.version>

        <!-- In order to ignore the UI tests by default but turn them on in the Tests.UI profile, we need to do this
        by using properties. The Tests.UI profile basically reverses these properties. Doing this from the command line
        was not really possible.
        -->
        <tests.excludedGroups>UI</tests.excludedGroups>
        <tests.groups />

        <build.resultKey>${project.version}</build.resultKey>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
        <build.buildTimeStamp>${maven.build.timestamp}</build.buildTimeStamp>

        <!-- Default Postgres Database settings for Liquibase and Maven SQL Plugin-->
        <database>postgres</database>
        <database.driver>org.postgresql.Driver</database.driver>
        <database.url>jdbc:postgresql://localhost/postgres</database.url>
        <database.delimiterType>normal</database.delimiterType>
        <!--<passwords.properties>must be specified as the location of the password properties file</passwords.properties>-->

        <!-- Note - For the Feature branch builds, the mercury.fb.ip must contain an @ otherwise the resources-fb/mercury-dev-ds.xml will not be syntactically correct.
        The @ is a meta character to the maven filtering such that the combination of
        @${mercury.fb.ip} does not get subsituted at all. Hence the resources-fb/mercury-dev-ds.xml only contains ${mercury.rc.ip} -->

        <!-- A Feature Branch gpgold server -->
        <mercury.fb.ip>MustBeSpecified</mercury.fb.ip>

        <umlgraph.path>must be specified</umlgraph.path>

        <!-- Default location of the .keystore for tests -->
        <keystoreFile>../JBossConfig/src/main/resources/keystore/.keystore</keystoreFile>
        <keystorePassword>changeit</keystorePassword>

        <jboss.socket.https>8443</jboss.socket.https>

        <bspclient.version>1.3.156</bspclient.version>

	<mercuryCloverDatabase>${project.build.directory}/clover/clover.db</mercuryCloverDatabase>

    </properties>

    <profiles>
        <profile>
            <id>LinuxProperties</id>
            <activation>
                <os>
                    <name>Linux</name>
                </os>
            </activation>
            <properties>
                <surefire.argLine>-XX:ReservedCodeCacheSize=256m -Xms4g -XX:MaxPermSize=1g </surefire.argLine>
            </properties>
        </profile>
        <profile>
            <id>Clover.report</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>clover-maven-plugin</artifactId>
                        <configuration>
                            <cloverDatabase>${mercuryCloverDatabase}</cloverDatabase>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <includesAllSourceRoots>false</includesAllSourceRoots>
                            <targetPercentage>${clover.targetPercentage}</targetPercentage>
                            <excludes>
                                <exclude>**/generated/*.java</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>instrument</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>clover</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                    <goal>clover</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>clover-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>Clover.optimize</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>clover-maven-plugin</artifactId>
                        <configuration>
                            <cloverDatabase>${mercuryCloverDatabase}</cloverDatabase>
                            <fullRunEvery>60</fullRunEvery>
                            <snapshot>${user.home}/.clover/${project.groupId}-${project.artifactId}/clover.snapshot
                            </snapshot>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <includesAllSourceRoots>true</includesAllSourceRoots>
                        </configuration>
                        <executions>
                            <execution>
                                <id>clover</id>
                                <goals>
                                    <goal>setup</goal>
                                    <goal>optimize</goal>
                                    <goal>snapshot</goal>
                                    <goal>save-history</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Clover.All</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>clover-maven-plugin</artifactId>
                        <configuration>
                            <cloverDatabase>${mercuryCloverDatabase}</cloverDatabase>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <includesAllSourceRoots>false</includesAllSourceRoots>
                            <targetPercentage>${clover.targetPercentage}</targetPercentage>
			    <flushPolicy>threaded</flushPolicy>
                            <generateHtml>true</generateHtml>
                            <generateXml>true</generateXml>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>instrument</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Clover.site</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>clover-maven-plugin</artifactId>
                        <configuration>
                            <cloverDatabase>${mercuryCloverDatabase}</cloverDatabase>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <includesAllSourceRoots>false</includesAllSourceRoots>
                            <targetPercentage>${clover.targetPercentage}</targetPercentage>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>instrument</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                    <goal>log</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>site</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>save-history</goal>
                                    <goal>reset</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>clover-maven-plugin</artifactId>
                        <version>${clover.plugin.version}</version>
                        <configuration>
                            <cloverDatabase>${mercuryCloverDatabase}</cloverDatabase>
                            <historyDir>${user.home}/.clover/history/${project.artifactId}</historyDir>
                            <generateHistorical>true</generateHistorical>
                            <generateHtml>true</generateHtml>
                            <generateXml>true</generateXml>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <!-- schemagen generates XSDs from JAX-RS DTOs.  schemagen and clover seem to interfere, so schemagen must be run separately -->
            <id>Jaxb.schemagen</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>jaxb2-maven-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>LabEventSchemaGen</id>
                                <goals>
                                    <goal>schemagen</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/Namespaces.java
                                        </include>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/labevent/*Bean.java
                                        </include>
                                    </includes>
                                    <excludes>
                                        <exclude>
                                            org/broadinstitute/gpinformatics/mercury/boundary/labevent/BettaLimsMessageBean.java
                                        </exclude>
                                    </excludes>
                                    <transformSchemas>
                                        <!--
                                            Each schema element defines:

                                            a) A <<namespace uri>> for one of your namespaces.
                                               This namespace uri must be unique within the schemas element.

                                            b) A <<toPrefix>> that you want to use for the namespace.
                                               Should not contain whitespace or exotic characters.
                                               This yields a namespace definition on the form
                                               <xs:schema ... xmlns:[toPrefix]="[uri]" ... />

                                               (I.e: <xs:schema ... xmlns:some="http://some/namespace" xmlns:xs="http://www.w3.org/2001/XMLSchema"> )

                                               ... and transforms relevant xml schema elements to use the provided namespace prefix:

                                               <some:elementName ... />

                                            c) The desired <<toFile>> name of the generated XML schema definition file,
                                               excluding the ".xsd" suffix (which will be added automatically).
                                        -->
                                        <transformSchema>
                                            <uri>http://broadinstitute.org/gpinformatics/mercury/labevent</uri>
                                            <!--
                                            <toPrefix>labevent</toPrefix>
                                            -->
                                            <toFile>labevent.xsd</toFile>
                                        </transformSchema>
                                    </transformSchemas>
                                </configuration>
                            </execution>
                            <execution>
                                <id>VesselSchemaGen</id>
                                <goals>
                                    <goal>schemagen</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/Namespaces.java
                                        </include>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/vessel/*Bean.java
                                        </include>
                                    </includes>
                                    <excludes>
                                        <exclude>org/broadinstitute/gpinformatics/mercury/boundary/vessel/SampleReceiptMessageBean.java</exclude>
                                        <exclude>org/broadinstitute/gpinformatics/mercury/boundary/vessel/RegisterTubeBean.java</exclude>
                                        <exclude>org/broadinstitute/gpinformatics/mercury/boundary/vessel/RegisterTubesBean.java</exclude>
                                    </excludes>
                                    <transformSchemas>
                                        <transformSchema>
                                            <uri>http://broadinstitute.org/gpinformatics/mercury/vessel</uri>
                                            <!--
                                            <toPrefix>labevent</toPrefix>
                                            -->
                                            <toFile>vessel.xsd</toFile>
                                        </transformSchema>
                                    </transformSchemas>
                                </configuration>
                            </execution>
                            <execution>
                                <id>SearchSchemaGen</id>
                                <goals>
                                    <goal>schemagen</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/Namespaces.java
                                        </include>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/search/*Bean.java
                                        </include>
                                    </includes>
                                    <transformSchemas>
                                        <transformSchema>
                                            <uri>http://broadinstitute.org/gpinformatics/mercury/search</uri>
                                            <toFile>search.xsd</toFile>
                                        </transformSchema>
                                    </transformSchemas>
                                </configuration>
                            </execution>
                            <execution>
                                <id>FingerprintSchemaGen</id>
                                <goals>
                                    <goal>schemagen</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/Namespaces.java
                                        </include>
                                        <include>org/broadinstitute/gpinformatics/mercury/boundary/run/Finger*Bean.java
                                        </include>
                                    </includes>
                                    <transformSchemas>
                                        <transformSchema>
                                            <uri>http://broadinstitute.org/gpinformatics/mercury/fingerprint</uri>
                                            <toFile>fingerprint.xsd</toFile>
                                        </transformSchema>
                                    </transformSchemas>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Tests.ExternalIntegration</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- "arquillian" test group is used by Arquillian itself and needs to be active to run Arquillian tests -->

                        <configuration>
                            <groups>arquillian, ExternalIntegration</groups>
                            <systemProperties>
                                <property>
                                    <name>jbossHttpsPort</name>
                                    <value>${jboss.socket.https}</value>
                                </property>
                            </systemProperties>

                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <profile>
            <id>Tests.DatabaseFree</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <groups>DatabaseFree</groups>
                            <systemProperties>
                                <property>
                                    <name>jbossHttpsPort</name>
                                    <value>${jboss.socket.https}</value>
                                </property>
                            </systemProperties>
                            <argLine>${surefire.argLine}</argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>
        <profile>
            <id>Tests.Multithreaded</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <groups>Multithreaded</groups>
                            <systemProperties>
                                <property>
                                    <name>jbossHttpsPort</name>
                                    <value>${jboss.socket.https}</value>
                                </property>
                            </systemProperties>
                            <argLine>${surefire.argLine}</argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>

        <profile>
            <id>Tests.Parallel</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludedGroups>UI</excludedGroups>
                            <runOrder>failedFirst</runOrder>
                            <parallel>methods</parallel>
                            <threadCount>10</threadCount>
                            <systemProperties>
                                <property>
                                    <name>jbossHttpsPort</name>
                                    <value>${jboss.socket.https}</value>
                                </property>
                            </systemProperties>

                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile is use to only run the UI Tests. -->
        <profile>
            <id>Tests.UI</id>
            <properties>
                <tests.excludedGroups />
                <tests.groups>UI,arquillian</tests.groups>
            </properties>
        </profile>

        <profile>
            <id>Tests.ArqSuite.Stubby</id>
            <dependencies>
                <dependency>
                    <groupId>org.eu.ingwar.tools</groupId>
                    <artifactId>arquillian-suite-extension</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-test-source</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/test/arquillianSuiteExtension</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- "arquillian" test group is used by Arquillian itself and needs to be active to run Arquillian tests -->
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>ArqSuiteGroup</name>
                                    <value>Stubby</value>
                                </property>
                                <property>
                                    <name>jbossHttpsPort</name>
                                    <value>${jboss.socket.https}</value>
                                </property>
                            </systemProperties>
                            <groups>arquillian, Stubby</groups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Tests.ArqSuite.Standard</id>
            <dependencies>
                <dependency>
                    <groupId>org.eu.ingwar.tools</groupId>
                    <artifactId>arquillian-suite-extension</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-test-source</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/test/arquillianSuiteExtension</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- "arquillian" test group is used by Arquillian itself and needs to be active to run Arquillian tests -->
                        <configuration>

                            <systemProperties>
                                <property>
                                    <name>ArqSuiteGroup</name>
                                    <value>Standard</value>
                                </property>
                                <property>
                                    <name>jbossHttpsPort</name>
                                    <value>${jboss.socket.https}</value>
                                </property>
                            </systemProperties>
                            <groups>arquillian, Standard</groups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Tests.Alternatives</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- "arquillian" test group is used by Arquillian itself and needs to be active to run Arquillian tests -->
                        <configuration>
                            <groups>arquillian, Alternatives</groups>
                            <systemProperties>
                                <property>
                                    <name>jbossHttpsPort</name>
                                    <value>${jboss.socket.https}</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Tests.LongRunning</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- "arquillian" test group is used by Arquillian itself and needs to be active to run Arquillian tests -->
                        <configuration>
                            <groups>arquillian, LongRunning</groups>
                            <systemProperties>
                                <property>
                                    <name>jbossHttpsPort</name>
                                    <value>${jboss.socket.https}</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- default Java EE profile to include Java EE API dependencies in the absence of a specific container -->
        <profile>
            <id>Arquillian-WildFly10-Managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>2.1.0.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <argLine>-Xmx2048m</argLine>
                            <systemProperties>
                                <jboss.version>${wildfly.version}</jboss.version>
                                <property>
                                    <name>jbossHttpsPort</name>
                                    <value>${jboss.socket.https}</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Arquillian-WildFly10-Remote</id>
            <!-- These dependencies won't get bundled into shrinkwrapped Arquillian archive -->
            <dependencyManagement>
                <dependencies>
                    <!-- Child of arquillian-bom -->
                    <dependency>
                        <groupId>org.jboss.shrinkwrap.resolver</groupId>
                        <artifactId>shrinkwrap-resolver-bom</artifactId>
                        <version>2.2.4</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>


            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.testng</groupId>
                    <artifactId>arquillian-testng-container</artifactId>
                    <scope>test</scope>
                </dependency>

                 <dependency>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-api</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-spi</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-api-maven</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-spi-maven</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
                    <scope>test</scope>
                </dependency>

                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>2.1.0.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>DEV</id>
            <properties>
                <passwords.properties>src/test/resources/mercury-dev-passwords.properties</passwords.properties>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources-dev</directory>
                    </testResource>
                </testResources>
            </build>
        </profile>

        <profile>
            <!-- For Feature Branch builds -->
            <id>FB</id>
            <properties>
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:${mercury.fb.ip}:1521:gpgold</database.url>
                <passwords.properties>src/test/resources-fb/fb-passwords.properties</passwords.properties>
            </properties>

            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources-fb</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
            </build>
        </profile>

        <profile>
            <id>BUILD</id>
            <properties>
                <!-- For Unit tests on MercuryFB and deploy to MercuryDEV -->
                <!--  Oracle Dev database -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@vmgpinform:1521:gpinfdev</database.url>
                <passwords.properties>src/test/resources/mercury-dev-passwords.properties</passwords.properties>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources-build</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>

                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <webResources>
                                <resource>
                                    <!-- This allows us to overwrite the ejb-jar.xml for development with the special version for Bamboo builds and GPUI testing -->
                                    <directory>src/main/webapp-build</directory>
                                </resource>
                            </webResources>
                        </configuration>

                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>RC</id>
            <properties>
                <!--  Oracle Dev database -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@gpinfqa:1521:gpinfqa</database.url>
                <passwords.properties>src/test/resources/mercury-qa-passwords.properties</passwords.properties>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources-rc</directory>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>

                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <webResources>
                                <resource>
                                    <!-- This allows us to overwrite the ejb-jar.xml for development with the special version for RC testing -->
                                    <directory>src/main/webapp-rc</directory>
                                </resource>
                            </webResources>
                        </configuration>

                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>QA</id>
            <properties>
                <!-- Oracle Dev -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@gpinfqa:1521:gpinfqa</database.url>
                <passwords.properties>src/test/resources/mercury-qa-passwords.properties</passwords.properties>
            </properties>
        </profile>
        <profile>
            <id>PROD</id>
            <!-- This is for PRODUCTION ONLY.  If you need to debug against production, use one of the
                 other profiles and the -prod-ds.xml files.  This profile pulls from production JMS queues, so using
                 it for a debug server may cause message loss.  -->
            <properties>
                <!-- Oracle Dev -->
                <database>oracle</database>
                <database.delimiterType>row</database.delimiterType>

                <database.driver>oracle.jdbc.driver.OracleDriver</database.driver>
                <database.url>jdbc:oracle:thin:@gpinfoprod:1521:gpinfprd</database.url>
                <!-- The production password is stored outside of the GIT repo in the Release Engineer's home directory -->
                <passwords.properties>${user.home}/mercury-prod-passwords.properties</passwords.properties>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <!-- Want to remove the ArquilliantestRunnerAccess security constraint node from the web.xml -->
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <scripts>
                                        <script>
                                            <![CDATA[

def webFile = new File("src/main/webapp/WEB-INF/web.xml")
def webapp = new XmlParser().parseText(webFile.text)
def securityConstraints = webapp.'security-constraint'
def sc = securityConstraints.find { it.'web-resource-collection'.'web-resource-name'.text() =="ArquillianTestRunnerAccess"    }
webapp.remove(sc)
new File("target/prod").mkdir()
XmlNodePrinter nodePrinter = new XmlNodePrinter(new PrintWriter(new FileWriter("target/prod/web.xml")))
nodePrinter.setPreserveWhitespace(true)
nodePrinter.print(webapp)
                                    ]]>
                                        </script>
                                    </scripts>
                                </configuration>

                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <!-- any version of Groovy \>= 1.5.0 should work here -->
                                <version>2.4.1</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <webResources>
                                <resource>
                                    <!-- This allows us to overwrite the ejb-jar.xml for development with the special version for production -->
                                    <directory>src/main/webapp-prod</directory>
                                </resource>
                            </webResources>
                            <!-- Use the web.xml that has had the ArquillianTestRunnerAccess removed -->
                            <webXml>target/prod/web.xml</webXml>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <profile>
            <id>Liquibase</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- Pick up the DB passwords from the particular password file DEV, QA, RC or PROD -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>read</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>${passwords.properties}</file>
                                    </files>
                                </configuration>
                            </execution>
                            <execution>
                                <id>write</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>write-project-properties</goal>
                                </goals>
                                <configuration>
                                    <outputFile>
                                        ${project.build.directory}/build.properties
                                    </outputFile>
                                </configuration>

                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Mercury</id>
                                <phase>initialize</phase>
                                <configuration>
                                    <changeLogFile>src/main/db/mercurydb.changelog-master.xml</changeLogFile>
                                    <driver>${database.driver}</driver>
                                    <url>${database.url}</url>
                                    <username>mercury</username>
                                    <password>${mercury.password}</password>
                                    <defaultSchemaName>mercury</defaultSchemaName>
                                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                                </configuration>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>Athena</id>
                                <phase>initialize</phase>
                                <configuration>
                                    <changeLogFile>src/main/db/athenadb.changelog-master.xml</changeLogFile>
                                    <driver>${database.driver}</driver>
                                    <url>${database.url}</url>
                                    <username>athena</username>
                                    <password>${athena.password}</password>
                                    <defaultSchemaName>athena</defaultSchemaName>
                                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                                </configuration>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>com.oracle.jdbc</groupId>
                                <artifactId>ojdbc7</artifactId>
                                <version>${oracle.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <driver>${database.driver}</driver>
                            <url>${database.url}</url>
                            <username>athena</username>
                            <password>${athena.password}</password>
                        </configuration>
                        <executions>
                            <execution>
                                <id>Apply Athena Grants</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <delimiterType>${database.delimiterType}</delimiterType>
                                    <srcFiles>
                                        <srcFile>src/main/db/athena-${database}-grants.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>MessageTestJar</id>
            <properties>
                <version>${project.version}</version>
                <file>target/${project.artifactId}-${project.version}-tests.jar</file>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}</artifactId>
                <packaging>jar</packaging>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>**/*JaxbBuilder*.class</include>
                                <include>**/ProductionFlowcellPath.class</include>
                                <include>**/BettaLimsMessageTestFactory*.class</include>
                            </includes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <url>${project.distributionManagement.repository.url}</url>
                            <classifier>message-test</classifier>
                            <uniqueVersion>false</uniqueVersion>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>BettaLimsGeneratedJar</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <classifier>bettalims-generated</classifier>
                            <includes>
                                <include>**/bettalims/generated/*.class</include>
                                <include>**/Workflow.class</include>
                            </includes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <url>${project.distributionManagement.repository.url}</url>
                            <file>target/${project.artifactId}-${project.version}-bettalims-generated.jar</file>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                            <packaging>jar</packaging>
                            <classifier>bettalims-generated</classifier>
                            <uniqueVersion>false</uniqueVersion>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>

        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.4.0.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.eu.ingwar.tools</groupId>
                <artifactId>arquillian-suite-extension</artifactId>
                <version>1.2.0</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Hibernate classes include this but at deploy causes versioning error :
           - java.lang.ClassCastException: org.dom4j.DocumentFactory cannot be cast to org.dom4j.DocumentFactory
           - Exclude by declaring scope private and explicitly exclude jar in Arquillian shrinkwrap DeploymentBuilder!
           - TODO:  Failed 10.0.0, retry for 10.1.0+
           -->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.14.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-netty</artifactId>
            <version>3.10.4</version>
            <exclusions>
                <exclusion>
                    <!-- Version is too old -->
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>

        <!-- App dependency plus org.eu.ingwar.tools.arquillian-suite-extension requires newer library than what's in org.mock-server -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>24.0-jre</version>
        </dependency>

        <!-- ***
             * For WildFly, use org.jboss.spec:jboss-javaee-7.0 in lieu of javax:javaee-api.
             * See: https://community.jboss.org/wiki/WhatsTheCauseOfThisExceptionJavalangClassFormatErrorAbsentCode
             *** -->
        <dependency> <!-- WildFly 10.1 patched to CDI 1.2 API -->
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-7.0</artifactId>
            <version>1.0.0.Final</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.hamcrest/java-hamcrest   -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>java-hamcrest</artifactId>
            <version>2.0.0.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-integration -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-integration</artifactId>
            <version>1.3</version>
        </dependency>

        <!-- uncomment this to enable squid integration -->
        <!--
        <dependency>
            <groupId>Squid</groupId>
            <artifactId>SquidEntities</artifactId>
            <version>${build.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>edu.mit.broad.prodinfo</groupId>
            <artifactId>squidServices</artifactId>
            <version>${build.version}</version>
        </dependency>
        -->

        <!-- TODO:  JMS:  These will get hoovered up by DeploymentBuilder and put into Arquillian shrinkwrap war
           - Not sure which can be moved to WildFly10 profiles and which need to stay here for deploy with test
           -->
        <dependency>
            <groupId>org.jboss.arquillian.core</groupId>
            <artifactId>arquillian-core-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.core</groupId>
            <artifactId>arquillian-core-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.core</groupId>
            <artifactId>arquillian-core-impl-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.config</groupId>
            <artifactId>arquillian-config-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.config</groupId>
            <artifactId>arquillian-config-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.config</groupId>
            <artifactId>arquillian-config-impl-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.test</groupId>
            <artifactId>arquillian-test-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.test</groupId>
            <artifactId>arquillian-test-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.test</groupId>
            <artifactId>arquillian-test-impl-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-impl-base</artifactId>
            <version>1.1.11.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-test-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-test-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-test-impl-base</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.testenricher</groupId>
            <artifactId>arquillian-testenricher-ejb</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.testenricher</groupId>
            <artifactId>arquillian-testenricher-cdi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testenricher</groupId>
            <artifactId>arquillian-testenricher-resource</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testenricher</groupId>
            <artifactId>arquillian-testenricher-initialcontext</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- End of dependencies for Arquillian shrinkwrap war -->

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20090211</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.stripes</groupId>
            <artifactId>stripes</artifactId>
            <!-- version 1.7.0 betas compiled against servlet 3.1 -->
            <version>1.5.7</version>
        </dependency>

        <dependency>
            <groupId>com.samaxes.stripes</groupId>
            <artifactId>stripes-injection-enricher</artifactId>
            <version>1.0.3</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
        </dependency>

        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.5.6</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.3</version>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.9</version>
            <scope>test</scope>
        </dependency>

        <!-- Match what's in WildFly 10 CDI patch -->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
            <version>2.4.1.Final</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.2</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.3</version>
        </dependency>

        <!-- Hibernate API dependencies -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.0.10.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>5.0.10.Final</version>
            <scope>provided</scope>
            <exclusions>
                <!-- using cglib-nodep instead -->
                <exclusion>
                    <groupId>cglib</groupId>
                    <artifactId>cglib</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>5.0.10.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-envers</artifactId>
            <version>5.0.10.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- End of Hibernate API dependencies -->

        <dependency>
            <groupId>com.oracle.jdbc</groupId>
            <artifactId>ojdbc7</artifactId>
            <version>${oracle.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.6</version>
        </dependency>

        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.4.0</version>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
            <exclusions>
                <!-- Uses an old hamcrest library incompatible with Arquillian -->
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>3.0.19.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <version>3.0.19.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <version>3.0.19.Final</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>lims</groupId>
            <artifactId>limsThrift</artifactId>
            <version>1.0-20160719.173735-65</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.17</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.17</version>
        </dependency>
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>4.4</version>
        </dependency>

        <!-- exists only to be included in ShrinkWrap deployments. would be better to include explicitly in DeploymentBuilder -->
        <dependency>
            <groupId>com.atlassian.clover</groupId>
            <artifactId>clover</artifactId>
            <version>${clover.version}</version>
            <!-- cannot be test scoped because it is needed for compiling instrumented main sources -->
            <!--<scope>test</scope>-->
        </dependency>

        <!-- Support client ws testing, WildFly app uses module "javax.ws.rs.api" which references this
           - See jboss-deployment-structure.xml  -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>3.0.19.Final</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.2</version>
        </dependency>


        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.2</version>
        </dependency>

        <!-- Before bspclient until it's dependency version is updated from 1.4.4! -->
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.9</version>
        </dependency>

        <dependency>
            <groupId>org.broadinstitute.bsp</groupId>
            <artifactId>bspclient</artifactId>
            <!-- Unfortunately (for now) there is also a rest-pom.xml.  Changes to this version should be reflected in that
            file as well until such a time that we reconfigure the mercury structure to have a dependant project or something.
             -->

            <!-- CHANGE rest-pom.xml WHEN CHANGING THIS!! -->
            <!-- CHANGE rest-pom.xml WHEN CHANGING THIS!! -->
            <!-- CHANGE rest-pom.xml WHEN CHANGING THIS!! -->
            <version>${bspclient.version}</version>
            <!-- CHANGE rest-pom.xml WHEN CHANGING THIS!! -->
            <!-- CHANGE rest-pom.xml WHEN CHANGING THIS!! -->
            <!-- CHANGE rest-pom.xml WHEN CHANGING THIS!! -->
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.10</version>
        </dependency>


        <dependency>
            <groupId>com.sun.org.apache</groupId>
            <artifactId>jaxp-ri</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>annotations</artifactId>
            <version>9.0.4</version>
        </dependency>

        <dependency>
            <groupId>org.meanbean</groupId>
            <artifactId>meanbean</artifactId>
            <version>2.0.3</version>
            <scope>test</scope>
        </dependency>

        <!--  BettaLimsMessageBeanTest, WorkCompleteMessageBeanTest, and InfiniumPipelineClient -->
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-client</artifactId>
            <version>5.14.5</version>
        </dependency>

        <dependency>
            <groupId>com.jgraph</groupId>
            <artifactId>jgraphx</artifactId>
            <version>1.4.0.9</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>net.java.dev.inflector</groupId>
            <artifactId>inflector</artifactId>
            <version>0.7.0</version>
        </dependency>

        <dependency>
            <groupId>net.sf.scannotation</groupId>
            <artifactId>scannotation</artifactId>
            <version>1.0.2</version>
        </dependency>

        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.19</version>
        </dependency>

        <!-- WildFly 10 has newer versions of org.apache.httpcomponents built in.
           - Is it worth the effort to make scope provided
           -   and declare as a module dependency in jboss-deployment-structure.xml?
          -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-cache</artifactId>
            <version>4.3.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-impl</artifactId>
            <version>${deltaspike.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.cdictrl</groupId>
            <artifactId>deltaspike-cdictrl-api</artifactId>
            <version>${deltaspike.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.deltaspike.cdictrl</groupId>
            <artifactId>deltaspike-cdictrl-weld</artifactId>
            <version>${deltaspike.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Uncomment to deploy jprofiler libraries for performance troubleshooting
                <dependency>
                    <groupId>com.jprofiler</groupId>
                    <artifactId>jprofiler</artifactId>
                    <version>6</version>
                </dependency>
        -->
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>1.2.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-vfs</artifactId>
            <version>3.2.2.Final</version>
        </dependency>

        <dependency>
            <groupId>org.broadinstitute.sapservices</groupId>
            <artifactId>SAPServices</artifactId>
            <version>1.10</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>uk.com.robust-it</groupId>
            <artifactId>cloning</artifactId>
            <version>1.9.5</version>
        </dependency>

<!-- todo jmt for fingerprint concordance checking
        <dependency>
            <groupId>com.github.broadinstitute</groupId>
            <artifactId>picard</artifactId>
            <version>2.16.0</version>
        </dependency>

        <dependency>
            <groupId>com.github.broadinstitute</groupId>
            <artifactId>picard-private</artifactId>
            <version>1.1</version>
        </dependency>
-->

        <dependency>
            <groupId>com.github.pukkaone</groupId>
            <artifactId>webappenhance</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.owasp.encoder</groupId>
            <artifactId>encoder</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.owasp</groupId>
            <artifactId>csrfguard</artifactId>
            <version>3.1.0</version>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.atlassian.maven.plugins</groupId>
                    <artifactId>clover-maven-plugin</artifactId>
                    <version>${clover.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.17</version>
                </plugin>

                <plugin>
                    <groupId>com.sun.tools.xjc.maven2</groupId>
                    <artifactId>maven-jaxb-plugin</artifactId>
                    <version>1.1.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.3.2</version>
                </plugin>

                <plugin>
                    <!-- https://mvnrepository.com/artifact/org.wildfly.plugins/wildfly-maven-plugin -->
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>1.0.2.Final</version>
                </plugin>

                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>2.0.5</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>3.0.0-SNAPSHOT</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.7</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.9</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>1.0-alpha-2</version>
                </plugin>

                <plugin>
                    <groupId>external.atlassian.jgitflow</groupId>
                    <artifactId>jgitflow-maven-plugin</artifactId>
                    <version>1.0-m5.1</version>
                </plugin>
		
                <plugin>
                    <groupId>com.amashchenko.maven.plugin</groupId>
                    <artifactId>gitflow-maven-plugin</artifactId>
                    <version>1.11.0</version>
                </plugin>

            </plugins>


        </pluginManagement>


        <plugins>
            <!--
             Configuration is a little quirky, but it's what's needed to put
             the output of different XSDs into different packages. Based on
             "Multiple schemas with different configuration" section of
             http://mojo.codehaus.org/jaxb2-maven-plugin/usage.html.
             -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>bettalims</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <!-- each execution needs to specify the schemaFile(s) to use -->
                            <schemaFiles>bettalims.xsd</schemaFiles>
                            <schemaDirectory>src/main/webapp/xsd</schemaDirectory>
                            <packageName>org.broadinstitute.gpinformatics.mercury.bettalims.generated</packageName>
                            <!-- each execution must have a unique staleFile -->
                            <staleFile>${project.build.directory}/jaxb2/.bettalimsXjcStaleFlag</staleFile>
                            <!-- all executions, except the first, need clearOutputDir set to false -->
                            <!--<clearOutputDir>false</clearOutputDir>-->
                        </configuration>
                    </execution>
                    <execution>
                        <id>LimsQuery</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <!-- each execution needs to specify the schemaFile(s) to use -->
                            <schemaFiles>LimsQueryTypes.xsd</schemaFiles>
                            <schemaDirectory>src/main/webapp/xsd</schemaDirectory>
                            <packageName>org.broadinstitute.gpinformatics.mercury.limsquery.generated</packageName>
                            <!-- each execution must have a unique staleFile -->
                            <staleFile>${project.build.directory}/jaxb2/.limsqueryXjcStaleFlag</staleFile>
                            <!-- all executions, except the first, need clearOutputDir set to false -->
                            <clearOutputDir>false</clearOutputDir>
                        </configuration>
                    </execution>

                    <execution>
                        <id>ClinicalResourceTypes</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <!-- each execution needs to specify the schemaFile(s) to use -->
                            <schemaFiles>ClinicalResourceTypes.xsd</schemaFiles>
                            <schemaDirectory>src/main/webapp/xsd</schemaDirectory>
                            <packageName>org.broadinstitute.gpinformatics.mercury.crsp.generated</packageName>
                            <!-- each execution must have a unique staleFile -->
                            <staleFile>${project.build.directory}/jaxb2/.ClinicalResourceTypesXjcStaleFlag</staleFile>
                            <!-- all executions, except the first, need clearOutputDir set to false -->
                            <clearOutputDir>false</clearOutputDir>
                        </configuration>
                    </execution>
                    <execution>

                        <id>VesselRegistration</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <!-- each execution needs to specify the schemaFile(s) to use -->
                            <schemaFiles>VesselRegistration.xsd</schemaFiles>
                            <schemaDirectory>src/main/webapp/xsd</schemaDirectory>
                            <packageName>org.broadinstitute.gpinformatics.mercury.boundary.vessel.generated
                            </packageName>
                            <!-- each execution must have a unique staleFile -->
                            <staleFile>${project.build.directory}/jaxb2/.VesselRegistrationXjcStaleFlag</staleFile>
                            <!-- all executions, except the first, need clearOutputDir set to false -->
                            <clearOutputDir>false</clearOutputDir>
                        </configuration>
                    </execution>
                    <execution>

                        <id>QpcrRunBean</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <!-- each execution needs to specify the schemaFile(s) to use -->
                            <schemaFiles>QpcrRunBean.xsd</schemaFiles>
                            <schemaDirectory>src/main/webapp/xsd</schemaDirectory>
                            <packageName>org.broadinstitute.gpinformatics.mercury.boundary.lims.generated</packageName>
                            <!-- each execution must have a unique staleFile -->
                            <staleFile>${project.build.directory}/jaxb2/.QpcrRunBeanXjcStaleFlag</staleFile>
                            <!-- all executions, except the first, need clearOutputDir set to false -->
                            <clearOutputDir>false</clearOutputDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>QiagenRackFile</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <!-- each execution needs to specify the schemaFile(s) to use -->
                            <schemaFiles>QiagenRackFile.xsd</schemaFiles>
                            <schemaDirectory>src/main/webapp/xsd</schemaDirectory>
                            <packageName>org.broadinstitute.gpinformatics.mercury.boundary.lims.qiagen.generated</packageName>
                            <!-- each execution must have a unique staleFile -->
                            <staleFile>${project.build.directory}/jaxb2/.QiagenRackFileXjcStaleFlag</staleFile>
                            <!-- all executions, except the first, need clearOutputDir set to false -->
                            <clearOutputDir>false</clearOutputDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>BarcodeDecoder</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <!-- each execution needs to specify the schemaFile(s) to use -->
                            <schemaFiles>BarcodeDecoder.xsd</schemaFiles>
                            <schemaDirectory>src/main/webapp/xsd</schemaDirectory>
                            <packageName>org.broadinstitute.gpinformatics.mercury.boundary.lims.barcode.generated</packageName>
                            <!-- each execution must have a unique staleFile -->
                            <staleFile>${project.build.directory}/jaxb2/.BarcodeDecoderXjcStaleFlag</staleFile>
                            <!-- all executions, except the first, need clearOutputDir set to false -->
                            <clearOutputDir>false</clearOutputDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <!-- todo jmt Revisit JPA 2.1 Hibernate schemagen in WildFly 10+
                             JPA standard is to use settings in persistence.xml -->
                        <!-- <processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor> -->
                    </compilerArguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.11</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/annotations</source>
                                <source>target/generated-sources/jaxb</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/endorsed</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax.xml.bind</groupId>
                                    <artifactId>jaxb-api</artifactId>
                                    <version>2.2.4</version>
                                    <type>jar</type>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>javax.xml.ws</groupId>
                                    <artifactId>jaxws-api</artifactId>
                                    <version>2.2.8</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <propertyExpansion>
                        checkstyle.importcontrol.file=checkstyle-import-control.xml
                        project.basedir=${project.basedir}
                    </propertyExpansion>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnViolation>false</failOnViolation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <targetJdk>1.8</targetJdk>
                    <!--
                                        <includeTests>true</includeTests>
                    -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <groups>${tests.groups}</groups>
                    <excludedGroups>${tests.excludedGroups}</excludedGroups>
                    <!--<forkMode>never</forkMode>-->
                    <systemPropertyVariables>
                        <javax.net.ssl.keyStore>${keystoreFile}</javax.net.ssl.keyStore>
                        <javax.net.ssl.keyStorePassword>${keystorePassword}</javax.net.ssl.keyStorePassword>
                        <javax.net.ssl.trustStore>${keystoreFile}</javax.net.ssl.trustStore>
                        <javax.net.ssl.trustStorePassword>${keystorePassword}</javax.net.ssl.trustStorePassword>
                    </systemPropertyVariables>
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>org.broadinstitute.gpinformatics.infrastructure.test.TestListener</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.jvnet.jax-ws-commons</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>mercury-wsimport</id>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <!-- The name of your generated source package -->
                            <packageName>org.broadinstitute.gpinformatics.mercury.boundary</packageName>
                            <wsdlDirectory>${basedir}/src/main/wsdl</wsdlDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>squid-wsimport</id>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <!-- The name of your generated source package -->
                            <packageName>org.broadinstitute.gpinformatics.mercury.boundary.squid</packageName>
                            <wsdlDirectory>${basedir}/src/main/wsdl/squid</wsdlDirectory>
                        </configuration>
                    </execution>
                </executions>

                <!-- if you want to use a specific version of JAX-WS, you can do so like this -->
                <dependencies>
                    <dependency>
                        <groupId>com.sun.xml.ws</groupId>
                        <artifactId>jaxws-tools</artifactId>
                        <version>2.1.7</version>
                        <exclusions>
                            <exclusion>
                                <groupId>org.jvnet.staxex</groupId>
                                <artifactId>stax-ex</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.jvnet.staxex</groupId>
                        <artifactId>stax-ex</artifactId>
                        <version>1.2</version>
                        <exclusions>
                            <exclusion>
                                <groupId>javax.xml.stream</groupId>
                                <artifactId>stax-api</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>


            <!--
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <configuration>
                                <includes>
                                    <include>**/org/broadinstitute/mercury/integration/**/*Test.java</include>
                                </includes>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>integration-test</goal>
                                        <goal>verify</goal>
                                    </goals>
                                 </execution>
                            </executions>
                        </plugin>
            -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
                    <docletArtifact>
                        <groupId>org.umlgraph</groupId>
                        <artifactId>umlgraph</artifactId>
                        <version>5.6</version>
                    </docletArtifact>
                    <docletPath>${umlgraph.path}</docletPath>
                    <!-- Note, the following parameters must be on one line -->
                    <additionalparam>-views -inferrel -inferdep -quiet -hide java.* -collpackages java.util.* -qualify
                        -postfixpackage -nodefontsize 9 -nodefontpackagesize 7
                    </additionalparam>
                    <useStandardDocletOptions>true</useStandardDocletOptions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <webappDirectory>${project.build.directory}/${project.artifactId}.war</webappDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Update Version property file for use by Bamboo</id>
                        <phase>process-classes</phase> <!-- folder needs to exist -->
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <propertyfile file="${pom.basedir}/target/classes/build.properties">
                                    <entry key="build.resultKey" type="string" value="${build.resultKey}" operation="=" />
                                    <entry key="build.buildTimeStamp" type="string" value="${build.buildTimeStamp}" operation="=" />
                                </propertyfile>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
	    
            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <configuration>
                    <!-- Allow untracked files during the release process -->
                    <allowUntracked>true</allowUntracked>
                    <!-- Allow snapshots when we start the release because the limsThrift version will be fixed during the release process -->
                    <allowSnapshots>true</allowSnapshots>
                    <pushFeatures>true</pushFeatures>
                    <noFeatureBuild>true</noFeatureBuild>
                    <enableFeatureVersions>true</enableFeatureVersions>
                    <releaseBranchVersionSuffix>RC</releaseBranchVersionSuffix>
                    <!--Do NOT do a build during the release-finish process -->
                    <noReleaseBuild>true</noReleaseBuild>
                    <!-- Do NOT use the Maven default release profile during the release process -->
                    <useReleaseProfile>false</useReleaseProfile>
                    <!-- Do NOT use the Maven deploy goal during the release process. -->
                    <noDeploy>true</noDeploy>
                    <!-- Do push the release branches to the remote upstream -->
                    <pushReleases>true</pushReleases>
                    <!-- Do push the hotfix branches to the remote upstream -->
                    <pushHotfixes>true</pushHotfixes>
                    <noHotfixBuild>true</noHotfixBuild>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.amashchenko.maven.plugin</groupId>
                <artifactId>gitflow-maven-plugin</artifactId>
                <version>1.12.0</version>
                <configuration>
                    <verbose>true</verbose>
                    <!-- Do not run the unit tests during the finish goals -->
                    <skipTestProject>true</skipTestProject>
                    <!-- When starting the release, update the development version at the start -->
                    <commitDevelopmentVersionAtStart>true</commitDevelopmentVersionAtStart>
                    <!-- The names of the branches being used -->
                    <gitFlowConfig>
                        <productionBranch>master</productionBranch>
                        <developmentBranch>develop</developmentBranch>
                    </gitFlowConfig>
                    <!-- Allow snapshots at the start of the release -->
                    <allowSnapshots>true</allowSnapshots>
                    <!-- Keep the SNAPSHOT prefix in the version until the release is finished -->
                    <useSnapshotInRelease>true</useSnapshotInRelease>
                    <!-- Keep the SNAPSHOT prefix in the version until the hot fix is finished -->
                    <useSnapshotInHotfix>true</useSnapshotInHotfix>
                    <!-- Push the new created branches to the remote upon start of the release and
                     the modified development and production branches at the end of the release. -->
                    <pushRemote>true</pushRemote>
                </configuration>
            </plugin>
            
        </plugins>

        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>2.6</version>
            </extension>
        </extensions>

        <testResources>
            <!-- Filtering corrupts the xlsx test files -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.xlsx</exclude>
                    <exclude>**/*.xls</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.xlsx</include>
                    <include>**/*.xls</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/main/webapp/WEB-INF/classes</directory>
                <includes>
                    <include>mercury-config.yaml</include>
                </includes>
            </testResource>
        </testResources>


    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.12</version>

                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>

            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
                    <docletArtifact>
                        <groupId>org.umlgraph</groupId>
                        <artifactId>umlgraph</artifactId>
                        <version>5.6</version>
                    </docletArtifact>
                    <docletPath>${umlgraph.path}</docletPath>
                    <!-- Note, the following parameters must be on one line -->
                    <additionalparam>-views -inferrel -inferdep -quiet -hide java.* -collpackages java.util.* -qualify
                        -postfixpackage -nodefontsize 9 -nodefontpackagesize 7
                    </additionalparam>
                    <useStandardDocletOptions>true</useStandardDocletOptions>
                    <quiet>true</quiet>
                    <minmemory>1024</minmemory>
                    <maxmemory>2048</maxmemory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <propertyExpansion>
                        checkstyle.importcontrol.file=checkstyle-import-control.xml
                        project.basedir=${project.basedir}
                    </propertyExpansion>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnViolation>false</failOnViolation>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <targetJdk>1.8</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.sonar-plugins</groupId>
                <artifactId>maven-report</artifactId>
                <version>0.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.8</version>
            </plugin>
        </plugins>
    </reporting>

</project>
