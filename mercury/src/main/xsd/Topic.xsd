<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="urn:Topic"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"        
        xmlns:topic="urn:Topic"
        xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
        xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
        jaxb:extensionBindingPrefixes="xjc"
        jaxb:version="2.0"        
        elementFormDefault="qualified"> 


<xsd:annotation>
    <xsd:documentation>
      We don't use the defaultWSBindings.xjb since it defines a globalBindings, but we want to override
      the handling of dateTimes.
    </xsd:documentation>
    <xsd:appinfo>
        <jaxb:globalBindings generateElementProperty="false">
            <xjc:serializable uid="12343"/>
            <jaxb:javaType name="java.util.Calendar"
                           xmlType="xsd:dateTime"
                           parseMethod="javax.xml.bind.DatatypeConverter.parseDateTime"
                           printMethod="javax.xml.bind.DatatypeConverter.printDateTime" />
        </jaxb:globalBindings>
    </xsd:appinfo>
</xsd:annotation>

<xsd:attributeGroup name="squidPersonAttributeGroup">
  <xsd:attribute name="personID" type="xsd:integer" use="required">
    <xsd:annotation>
      <xsd:documentation>
        PK into JADM PriviledgedParty
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="firstName" type="xsd:string" use="optional">
    <xsd:annotation>
      <xsd:documentation>
        First and last name are being made optional attributes on a SquidPerson.  
        This is for more practical enumeration of all the persons of a particular 
        role in PMBridge pulldowns when a Pass is being set up for the first time,
        without requiring the PMBridge to issue N WS calls to Squid that will result  
        in N database selects.  We still want the Squid WS that can look up a person
        by ID and type since the PM Bridge may need to display the persons that have
        been chosen for a Pass. 
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="lastName"  type="xsd:string" use="optional" />
  <xsd:attribute name="login"     type="xsd:string" use="optional" />
  
</xsd:attributeGroup>


<xsd:complexType name="SquidPerson">
  <xsd:attributeGroup ref="topic:squidPersonAttributeGroup" />
</xsd:complexType>



<xsd:complexType name="SquidPersonList">
  <xsd:sequence>
    <xsd:element name="squidPerson" type="topic:SquidPerson" minOccurs="0" maxOccurs="unbounded"/>
  </xsd:sequence>
</xsd:complexType>


<xsd:simpleType name="SequencingTechnology">
  <xsd:restriction base="xsd:string">
    <xsd:enumeration value="ILLUMINA" />
    <xsd:enumeration value="FOUR_FIVE_FOUR" />
    <xsd:enumeration value="ION_TORRENT" />
    <xsd:enumeration value="PACBIO" />
  </xsd:restriction>
</xsd:simpleType>



<xsd:attributeGroup name="projectInformationAttributeGroup">
  <xsd:attribute name="title"    type="xsd:string"    use="required" />
  <xsd:attribute name="nickname"                type="xsd:string"  use="optional">
    <xsd:annotation>
      <xsd:documentation>
      Per 2011-03-09 meeting, Lauren requested that a nickname be available for passes.  Although
      projects often have formal names, in many cases a nickname is used for those project almost
      exclusively (e.g. MM for Multiple Myeloma).  Making this optional for now so we don't force
      PMs to come up with nicknames if they don't want them.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="dateCreated"             type="xsd:dateTime"    use="optional" />
  <xsd:attribute name="lastModified"            type="xsd:dateTime"    use="optional" />
  <xsd:attribute name="platformProjectNumber"   type="xsd:string"      use="required" />
  <xsd:attribute name="irb"                     type="xsd:string"      use="required" >
    <xsd:annotation>
      <xsd:documentation>
      IRBs not currently validated, not sure how we would do validation
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="passNumber"              type="xsd:string"  use="optional">
    <xsd:annotation>
      <xsd:documentation>
      Assigned by Squid, so optional for newborn passes coming in from the PMBridge
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="version"                 type="xsd:long"  use="required">
    <xsd:annotation>
      <xsd:documentation>
      Assigned by Squid
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="lastAcceptedVersion"     type="xsd:long"  use="optional">
    <xsd:annotation>
      <xsd:documentation>
         The most recent version of this PASS that has been accepted by a Platform PM.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="diseaseName"              type="xsd:string"   use="optional" />
  <xsd:attribute name="commonName"               type="xsd:string"   use="optional" />
  <xsd:attribute name="organismID"               type="xsd:long"     use="required" />
  <xsd:attribute name="controlledAccess"         type="xsd:boolean"  use="required" />
  <xsd:attribute name="programProjectManagers"   type="xsd:string"   use="required" >
    <xsd:annotation>
      <xsd:documentation>
        These are not guaranteed to be in the Squid DB, so we'll just take this as a string literal
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>   
  <xsd:attribute name="analysisContacts"         type="xsd:string"   use="required" />
  <xsd:attribute name="sequencingTechnology"     type="topic:SequencingTechnology"   use="optional" />
</xsd:attributeGroup>


<xsd:attributeGroup name="bspPlatingOptionsAttributeGroup">
    <xsd:attribute name="canTake1uL"        type="xsd:boolean"   use="required" />
    <xsd:attribute name="canDepleteStocks"  type="xsd:boolean"   use="required" />
</xsd:attributeGroup>


<xsd:complexType name="BSPPlatingOptions">
    <xsd:attributeGroup ref="topic:bspPlatingOptionsAttributeGroup" />
</xsd:complexType>



<xsd:complexType name="ProjectInformation">
  <xsd:sequence>
     <xsd:element name="experimentGoals" type="xsd:string"   minOccurs="0"  maxOccurs="1">
       <xsd:annotation>
         <xsd:documentation>
        This is an element rather than an attribute in case there is whitespace that needs to be
        preserved.
         </xsd:documentation>
       </xsd:annotation>
     </xsd:element>   
  
    <xsd:element name="sponsoringScientists"    type="topic:SquidPersonList" />
    <xsd:element name="platformProjectManagers" type="topic:SquidPersonList">
      <xsd:annotation>
        <xsd:documentation>
	Per 2011-02-11 meeting these are 'SPMs' (Sequencing Project Managers,
	the Project Managers in the Genome Sequencing Platform, GSP). These are
	assigned within Squid as passes are dequeued and sent back for
	read-only display in PMBridge.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:element>

    <xsd:element name="bspPlatingOptions" type="topic:BSPPlatingOptions" minOccurs="0" maxOccurs="1">
      <xsd:annotation>
        <xsd:documentation>
            BSP Plating options are currently optional until PMBridge begins to support them, but if this element is
            present all options must be specified.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:element>

  </xsd:sequence>
  <xsd:attributeGroup ref="topic:projectInformationAttributeGroup" />
</xsd:complexType>


<xsd:attributeGroup name="fundingInformationAttributeGroup">
  <xsd:annotation>
    <xsd:documentation>
  per 2011-02-24 meeting with Keenan, both PMBridge and Squid will need to look up 
  other funding-related data from BSP quote services using the quote id's below
  
  per 2011-03-09 meeting with platform PM's, we still want to see the funding 
  agency at least on the PMBridge used by the PROGRAM PM's.  I still don't think
  we need to have PMBridge send that over to Squid, however.     
    </xsd:documentation>
  </xsd:annotation>
  <xsd:attribute name="fundingAgencies"      type="xsd:string" use="optional" />
  <xsd:attribute name="sequencingQuoteID"  type="xsd:string" use="required" />  
  <xsd:attribute name="bspPlatingQuoteID"  type="xsd:string" use="required" />  
</xsd:attributeGroup>


<xsd:attributeGroup name="priceItemAttributeGroup">
    <xsd:annotation>
        <xsd:documentation>
    Copied from SequeL's JAX-RS annotated POJO, which actually uses all of these fields in its #equals and #hashCode.
    I'm guessing there's really no natural key here, we actually need to store everything?
        </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="platform"     type="xsd:string" use="required"/>
    <xsd:attribute name="categoryName" type="xsd:string" use="required" />
    <xsd:attribute name="id"           type="xsd:string" use="required" />
    <xsd:attribute name="name"         type="xsd:string" use="required" />
    <xsd:attribute name="price"        type="xsd:string" use="required" />
    <xsd:attribute name="units"        type="xsd:string" use="required" />
</xsd:attributeGroup>



<xsd:complexType name="PriceItem">
    <xsd:attributeGroup ref="topic:priceItemAttributeGroup" />
</xsd:complexType>


<xsd:complexType name="FundingInformation">
    <xsd:sequence>
        <xsd:element name="bspPriceItem" type="topic:PriceItem" minOccurs="0" maxOccurs="1"/>
        <xsd:element name="gspPriceItem" type="topic:PriceItem" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
    <xsd:attributeGroup ref="topic:fundingInformationAttributeGroup" />
</xsd:complexType>



<xsd:complexType name="AttemptedLanesCoverageModel">
  <xsd:attribute name="attemptedLanes" type="xsd:decimal" use="required" />
</xsd:complexType>


<xsd:complexType name="PFAlignedBasesCoverageModel">
  <xsd:attribute name="coverageDesired" type="xsd:integer" use="required" />
</xsd:complexType>


<xsd:complexType name="PFBasesCoverageModel">
  <xsd:attribute name="coverageDesired" type="xsd:integer" use="required" />
</xsd:complexType>


<xsd:complexType name="PFReadsCoverageModel">
  <xsd:attribute name="readsDesired" type="xsd:integer" use="required" />
</xsd:complexType>


<xsd:attributeGroup name="targetCoverageModelAttrs">
  <xsd:attribute name="coveragePercentage" type="xsd:integer" use="required" />
  <xsd:attribute name="depth" type="xsd:integer" use="required" />
</xsd:attributeGroup>

<xsd:complexType name="TargetCoverageModel">
  <xsd:attributeGroup ref="topic:targetCoverageModelAttrs" />
</xsd:complexType>


<xsd:complexType name="AcceptedBasesCoverageModel">
  <xsd:attribute name="coverageDesired" type="xsd:integer" />
</xsd:complexType>


<xsd:simpleType name="PTPType">
  <xsd:restriction base="xsd:string">
    <xsd:enumeration value="twoRegionPTP" />
    <xsd:enumeration value="fourRegionPTP" />
    <xsd:enumeration value="eightRegionPTP" />
  </xsd:restriction>
</xsd:simpleType>


<xsd:complexType name="AttemptedRegionsCoverageModel">
  <xsd:sequence>
    <xsd:element name="ptpType" type="topic:PTPType" />
    <xsd:element name="numRegions" type="xsd:integer" />
  </xsd:sequence>
</xsd:complexType>


<xsd:complexType name="PhysicalCoverageModel">
  <xsd:sequence>
    <xsd:element name="coverageDesired" type="xsd:integer" />
  </xsd:sequence>
</xsd:complexType>


<xsd:complexType name="Q20BasesCoverageModel">
  <xsd:sequence>
    <xsd:element name="coverageDesired" type="xsd:integer" />
  </xsd:sequence>
</xsd:complexType>

<xsd:complexType name="ProgramPseudoDepthCoverageModel">
  <xsd:annotation>
    <xsd:documentation>
    Per Lauren, this corresponds to the "Depth" option on the PMBridge UI.  Platform PM's
    will be responsible for translating this value into one of the "real" coverage models
    as appropriate. 
    </xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
    <xsd:element name="coverageDesired" type="xsd:integer" />
  </xsd:sequence>
</xsd:complexType>


<xsd:complexType name="MeanTargetCoverageModel">
    <xsd:sequence>
        <xsd:element name="coverageDesired" type="xsd:integer" />
    </xsd:sequence>
</xsd:complexType>



<xsd:attributeGroup name="coverageAndAnalysisInformationAttributeGroup">
  <xsd:attribute name="analysisPipeline"        type="topic:AnalysisPipelineType"  use="required" />
  <xsd:attribute name="aligner"                 type="topic:AlignerType"           use="required" />
  <xsd:attribute name="referenceSequenceId"     type="xsd:long"                  use="required"  >
    <xsd:annotation>
      <xsd:documentation>
        Per 2011-03-09 meeting, both directed and WG passes have refseqs.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="samplesPooled"           type="xsd:boolean"                 use="required" />
  <xsd:attribute name="plex"                    type="xsd:decimal"                 use="optional" /> 
  <xsd:attribute name="keepFastQs"              type="xsd:boolean"                 use="required" /> 
</xsd:attributeGroup>


<xsd:complexType name="CoverageAndAnalysisInformation">
   <xsd:choice>
       <!-- Illumina/Solexa coverage models -->
       <xsd:element name="attemptedLanesCoverageModel" type="topic:AttemptedLanesCoverageModel" />
       <xsd:element name="pfAlignedBasesCoverageModel" type="topic:PFAlignedBasesCoverageModel" />
       <xsd:element name="pfBasesCoverageModel"        type="topic:PFBasesCoverageModel" />
       <xsd:element name="targetCoverageModel"         type="topic:TargetCoverageModel" />
       <xsd:element name="pfReadsCoverageModel"        type="topic:PFReadsCoverageModel" />
       <xsd:element name="meanTargetCoverageModel"     type="topic:MeanTargetCoverageModel" />
    
       <!-- 454 coverage models -->
       <xsd:element name="acceptedBasesCoverageModel"    type="topic:AcceptedBasesCoverageModel" />
       <xsd:element name="attemptedRegionsCoverageModel" type="topic:AttemptedRegionsCoverageModel" />
       <xsd:element name="physicalCoverageModel"         type="topic:PhysicalCoverageModel" />
       <xsd:element name="q20BasesCoverageModel"         type="topic:Q20BasesCoverageModel" />
       
       <!-- pseudo coverage model -->
       <xsd:element name="programPseudoDepthCoverageModel"    type="topic:ProgramPseudoDepthCoverageModel" />       
     </xsd:choice>     
  <xsd:attributeGroup ref="topic:coverageAndAnalysisInformationAttributeGroup" />
</xsd:complexType>


<xsd:attributeGroup name="dataSubmissionAttributeGroup">
  <xsd:attribute name="submitToTraceArchive"        type="xsd:boolean"  use="required" />
  <xsd:attribute name="secondaryAgencyToSubmitData" type="xsd:string"   use="required" />
  <xsd:attribute name="isDataProtected"             type="xsd:boolean"  use="required" />
</xsd:attributeGroup>

<xsd:complexType name="DataSubmission">
  <xsd:attributeGroup ref="topic:dataSubmissionAttributeGroup" />
</xsd:complexType>


<xsd:attributeGroup name="dataDeliveryAttributeGroup">
  <xsd:attribute name="externalDeadline"  type="xsd:boolean"   use="required" />
  <xsd:attribute name="deadline"          type="xsd:dateTime"  use="required" />
</xsd:attributeGroup>

<xsd:complexType name="DataDelivery">
  <xsd:sequence>
    <xsd:element name="recipientsOfDataSummaries"     type="topic:SquidPersonList" />
  </xsd:sequence>
  <xsd:attributeGroup ref="topic:dataDeliveryAttributeGroup" />
</xsd:complexType>


<xsd:complexType name="DataAggregation">
  <xsd:sequence>
    <xsd:element name="broadMembersWithBAMAccess" type="topic:SquidPersonList" />
  </xsd:sequence>
  <xsd:attribute name="aggregateAllDataFromOneLibraryToSingleBAM" type="xsd:boolean" use="required" />

</xsd:complexType>



<xsd:simpleType name="SampleValidationStatus">
  <xsd:annotation>
    <xsd:documentation>
	The only validation currently planned is sanity checking of "total DNA"
	(mass of DNA in sample)	and concentration.  Per 2011-03-08 meeting with 
	Keenan:
	
	LOW_ERROR for total DNA less than 100ng 
	LOW_WARN for total DNA 100ng to less than 500ng
	GOOD for 500ng+ total DNA
	
	LOW_ERROR for conc 2ng/ul or less
	GOOD for anything greater
	
	HOWEVER: Bob is currently going to implement these checks directly on
	the PMBridge, at least for the forthcoming demo.  Later we might want
	to put these validations back in Squid as we don't really want the 
	Program doing Platform validations.
		
	
	There was some discussion in the 2011-03-09 meeting of being able to 
	concentrate samples of unacceptably low concentration, remeasuring 
	their concentration, and possibly proceeding from there.  Not sure
	how this is going to work, but it's likely something we don't need
	to worry about short term.
	

	
    </xsd:documentation>
  </xsd:annotation>
  <xsd:restriction base="xsd:string">
    <xsd:enumeration value="OK" >
      <xsd:annotation>
        <xsd:documentation>
	Concentration or total DNA is within acceptable limits.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
    <xsd:enumeration value="LOW_WARN" >
      <xsd:annotation>
        <xsd:documentation>
	Concentration or total DNA is low but not so low as to prevent sequencing
	work. Samples with this validation status should show as yellow on the
	PMBridge UI, but sequencing work can proceed with this sample.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
    <xsd:enumeration value="LOW_ERROR" >
      <xsd:annotation>
        <xsd:documentation>
	Concentration or total DNA is too low for sequencing work with this
	sample. Samples with this validation status should show as red on the
	PMBridge UI. This sample must be removed from the sample set for this
	pass and possibly replaced with a higher total DNA or concentration sample
	from the same stock.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
  </xsd:restriction>
</xsd:simpleType>



<xsd:attributeGroup name="sampleValidationAttributeGroup">
  <xsd:attribute name="totalDNA" type="topic:SampleValidationStatus" use="required" />
  <xsd:attribute name="concentration" type="topic:SampleValidationStatus" use="required" />
</xsd:attributeGroup>

<xsd:complexType name="SampleValidation">
  <xsd:attributeGroup ref="topic:sampleValidationAttributeGroup" />
</xsd:complexType>

<xsd:complexType name="WorkRequests">
  <xsd:sequence>
    <xsd:element name="workRequest" type="xsd:int" minOccurs="0" maxOccurs="unbounded"/>
  </xsd:sequence>
</xsd:complexType>


<xsd:attributeGroup name="sampleAttributeGroup">
  <xsd:attribute name="bspSampleID"         type="xsd:string"             use="required" />  
</xsd:attributeGroup>

<xsd:complexType name="Sample">
  <xsd:sequence>
    <xsd:element name="validation"    type="topic:SampleValidation" minOccurs="0" maxOccurs="1">
      <xsd:annotation>
        <xsd:documentation>
	When a pass is first created in PMBridge and sent to Squid, this
	element will presumably be missing (minOccurs=0) for the selected
	samples. When Squid performs its validation and sends the pass back to
	PMBridge, this element should be filled out with validation codes
	present. 
        </xsd:documentation>
      </xsd:annotation>
    </xsd:element>      
 
    <xsd:element name="workRequests" type="topic:WorkRequests">
      <xsd:annotation>
        <xsd:documentation>
      
        Per Toby in 2011-02-10 post-meeting, we will not automatically create WRs from passes.
      
        Per 2011-02-24 meeting:
        
        Shopping Cart --- 1:1 --- LCSET --- 1:1 --- Work Request
        
        I believe Shopping Cart and LCSET are actually the same abstraction.  A WR will be created
        from a Shopping Cart/LCSET once the cart is full or if we just need to get going.
        
        Pass --- 1:(1..*) --- Sample
        
        Shopping Cart --- 1:(1..93) --- Sample
        
        We probably do not want to expose Shopping Cart/LCSET level information to PMBridge.
        Once a WR is actually created based on the LCSET, that can be exposed.
        
        
        Per Keenan in 2011-03-08 meeting, we might not necessarily want to have the WR information
        present with samples unless it will always be consumed.  Keenan was thinking we might 
        want a WR web service of some kind.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:element>
    
    <xsd:element name="note" type="xsd:string" minOccurs="0" maxOccurs="1">
      <xsd:annotation>
        <xsd:documentation>
        Per 2011-03-01 meeting, samples in the sample list need notes.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:element>
  </xsd:sequence>
  <xsd:attributeGroup ref="topic:sampleAttributeGroup" />
</xsd:complexType>


<xsd:complexType name="SampleList">
  <xsd:sequence>
    <xsd:element name="sample" type="topic:Sample" minOccurs="0" maxOccurs="unbounded"/>
  </xsd:sequence>
</xsd:complexType>


<xsd:simpleType name="PassStatus">
  <xsd:restriction base="xsd:string">
    <xsd:enumeration value="NEW">
      <xsd:annotation>
        <xsd:documentation>
	Freshly created and queued though not yet reviewed
	by a GSP Project Manager
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
    <xsd:enumeration value="IN_REVIEW">
      <xsd:annotation>
        <xsd:documentation>
	Dequeued and assigned to a specific GSP PM        
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
    <xsd:enumeration value="APPROVED">
      <xsd:annotation>
        <xsd:documentation>
	Approved by GSP and ready for work to begin        
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
    <xsd:enumeration value="IN_PROGRESS">
      <xsd:annotation>
        <xsd:documentation>
	Work has begun        
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
    <xsd:enumeration value="COMPLETE">
      <xsd:annotation>
        <xsd:documentation>
	GSP has completed work on this PASS        
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
    <xsd:enumeration value="ABANDONED">
      <xsd:annotation>
        <xsd:documentation>
	Abandoned, no work is to be done        
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
    <xsd:enumeration value="ON_HOLD">
      <xsd:annotation>
        <xsd:documentation>
	PASS is in a suspended state, no work to be done for the time being        
        </xsd:documentation>
      </xsd:annotation>
    </xsd:enumeration>
    
  </xsd:restriction>
  
  
</xsd:simpleType>


<xsd:simpleType name="AlignerType">
    <xsd:restriction base="xsd:string">
        <xsd:enumeration value="BWA" />
        <xsd:enumeration value="MAQ" />
        <xsd:enumeration value="TOPHAT" />
    </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="AnalysisPipelineType">
  <xsd:restriction base="xsd:string">
    <xsd:enumeration value="MPG" />
    <xsd:enumeration value="CANCER" />
    <xsd:enumeration value="OTHER" />
  </xsd:restriction>
</xsd:simpleType>

 
<xsd:attributeGroup name="submissionsInformationAttributeGroup">
  <xsd:attribute name="submit"          type="xsd:boolean"  use="required" />
  <xsd:attribute name="primaryAgency"   type="xsd:string"   use="optional" />
  <xsd:attribute name="dbGaPStudyName"  type="xsd:string"   use="optional" />
  <xsd:attribute name="secondaryAgency" type="xsd:string"   use="optional" />
</xsd:attributeGroup>

<xsd:complexType name="SubmissionsInformation">
  <xsd:attributeGroup ref="topic:submissionsInformationAttributeGroup" />
</xsd:complexType>


<xsd:simpleType name="PassType">
    <xsd:restriction base="xsd:string">
        <xsd:enumeration value="WG" />
        <xsd:enumeration value="DIRECTED" />
        <xsd:enumeration value="RNASEQ" />
    </xsd:restriction>
</xsd:simpleType>


<xsd:attributeGroup name="summarizedPassAttributeGroup">
  <xsd:attribute name="passNumber"          type="xsd:string"        use="required" />
  <xsd:attribute name="version"             type="xsd:long"          use="required" >
    <xsd:annotation>
      <xsd:documentation>
      This 'version' corresponds to the Squid-side concept of last submitted version.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="lastAcceptedVersion" type="xsd:long"          use="optional" /> 
  <xsd:attribute name="type"                type="topic:PassType"    use="required" />
  <xsd:attribute name="createdDate"         type="xsd:dateTime"      use="optional" />
  <xsd:attribute name="lastModified"        type="xsd:dateTime"      use="required" />
  <xsd:attribute name="title"               type="xsd:string"        use="required" />
  <xsd:attribute name="status"              type="topic:PassStatus"  use="required" />
  <xsd:attribute name="nickname"            type="xsd:string"        use="optional" />
  <xsd:attribute name="creator"             type="xsd:string"        use="required" />
  <xsd:attribute name="updatedBy"           type="xsd:string"        use="optional" />
  <xsd:attribute name="researchProject"     type="xsd:string"        use="optional" />
</xsd:attributeGroup>

<xsd:complexType name="SummarizedPass">
  <xsd:attributeGroup ref="topic:summarizedPassAttributeGroup" />
</xsd:complexType>

<xsd:attributeGroup name="abstractPassAttributeGroup">
  <xsd:attribute name="creator" type="xsd:string" use="required" />
  <xsd:attribute name="updatedBy" type="xsd:string" use="optional" />
  <xsd:attribute name="status" type="topic:PassStatus" use="required" >
    <xsd:annotation>
      <xsd:documentation>
	Assigned within Squid, sent back to PMBridge for read-only display         
      </xsd:documentation>
    </xsd:annotation>  
  </xsd:attribute>
  <xsd:attribute name="researchProject" type="xsd:string" use="optional" />
</xsd:attributeGroup>


<xsd:complexType name="AbstractPass">
  <xsd:annotation>
    <xsd:documentation>
	PASS stands for Project Approach and Specified Strategy. PASS documents
	contain the data needed to describe projects at both the GSAP (Program)
	and GSP (Platform) levels.

	The current version of this document is
	focused mostly on capturing information from the PMBridge, although I
	have begun adding data that GSP will generate in the process of
	validation and assignment of PASS samples to lcsets and work requests.

	Per Toby in post-meeting 2011-02-11, we will not automatically create
	WRs from PASSes (PASSes may not contain many samples, so we might want
	to have an LCSET shopping cart to build up to 93 samples + 1 pos
	control + 2 neg controls and then manually create a WR from this?). I
	have added a one-to-many from samples selected by PMBridge to WRs.
	
    </xsd:documentation>
   </xsd:annotation>
   <xsd:sequence>
     <xsd:element name="projectInformation"              type="topic:ProjectInformation" />
     <xsd:element name="fundingInformation"              type="topic:FundingInformation" />     
     <xsd:element name="coverageAndAnalysisInformation"  type="topic:CoverageAndAnalysisInformation" />
     <xsd:element name="sampleDetailsInformation"        type="topic:SampleList" />
     <xsd:element name="submissionsInformation"          type="topic:SubmissionsInformation" />
     <xsd:element name="additionalInformation"           type="xsd:string" />
   </xsd:sequence>
   <xsd:attributeGroup ref="topic:abstractPassAttributeGroup" />
</xsd:complexType>


<xsd:attributeGroup name="directedPassAttributeGroup">
  <xsd:attribute name="baitSetID" type="xsd:long" />
  <xsd:attribute name="exomeExpress" type="xsd:boolean" use="optional" />
</xsd:attributeGroup>

<xsd:complexType name="DirectedPass">
  <xsd:complexContent>
    <xsd:extension base="topic:AbstractPass">
      <xsd:attributeGroup ref="topic:directedPassAttributeGroup" />
    </xsd:extension>
  </xsd:complexContent>
</xsd:complexType>


<xsd:attributeGroup name="wholeGenomePassAttributeGroup">
  <!-- nothing for now -->
</xsd:attributeGroup>

<xsd:complexType name="WholeGenomePass">
  <xsd:complexContent>
    <xsd:extension base="topic:AbstractPass">
      <!-- nothing for now -->
    </xsd:extension>
  </xsd:complexContent>
</xsd:complexType>


<xsd:simpleType name="RNASeqProtocolType">
    <xsd:restriction base="xsd:string">
        <xsd:enumeration value="dUTP"/>
        <xsd:enumeration value="TruSeq"/>
        <xsd:enumeration value="Other"/>
    </xsd:restriction>
</xsd:simpleType>


<xsd:attributeGroup name="rnaseqPassAttributeGroup">
    <xsd:attribute name="transcriptomeReferenceSequenceID" type="xsd:long" use="optional"/>
    <xsd:attribute name="protocol" type="topic:RNASeqProtocolType" use="optional"/>
</xsd:attributeGroup>


<xsd:complexType name="RNASeqPass">
    <xsd:complexContent>
        <xsd:extension base="topic:AbstractPass">
            <xsd:attributeGroup ref="topic:rnaseqPassAttributeGroup"/>
        </xsd:extension>
    </xsd:complexContent>
</xsd:complexType>


<xsd:simpleType name="BaitSetDesignType">
  <xsd:restriction base="xsd:string">
    <xsd:enumeration value="WHOLE_EXOME" />
    <xsd:enumeration value="CUSTOM" />
  </xsd:restriction>
</xsd:simpleType>

<xsd:attributeGroup name="baitSetAttributeGroup">
  <xsd:attribute name="designName" type="xsd:string" use="required"/>
  <xsd:attribute name="id" type="xsd:long" use="required" />
  <xsd:attribute name="designType" type="topic:BaitSetDesignType" use="optional" />
  <xsd:attribute name="active" type="xsd:boolean" use="optional" />
</xsd:attributeGroup>

<xsd:complexType name="BaitSet">
  <xsd:attributeGroup ref="topic:baitSetAttributeGroup" />
</xsd:complexType>


<xsd:attributeGroup name="referenceSequenceAttributeGroup">
  <xsd:attribute name="id" type="xsd:long" use="required" />
  <xsd:attribute name="alias" type="xsd:string" use="required" />
  <xsd:attribute name="active" type="xsd:boolean" use="optional" />
</xsd:attributeGroup>


<xsd:complexType name="ReferenceSequence">
  <xsd:attributeGroup ref="topic:referenceSequenceAttributeGroup" />
</xsd:complexType>

<xsd:attributeGroup name="organismAttributeGroup">
  <xsd:attribute name="id"         type="xsd:long" use="required" />
  <xsd:attribute name="genus"      type="xsd:string" use="required" />
  <xsd:attribute name="species"    type="xsd:string" use="required" />
  <xsd:attribute name="commonName" type="xsd:string" use="optional" />
</xsd:attributeGroup>

<xsd:complexType name="Organism">
  <xsd:attributeGroup ref="topic:organismAttributeGroup" />
</xsd:complexType>



<xsd:complexType name="PassCritique">
  <xsd:sequence>
    <xsd:element name="errors" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
  </xsd:sequence>
</xsd:complexType>



<xsd:element name="directedPass" type="topic:DirectedPass" />
<xsd:element name="wholeGenomePass" type="topic:WholeGenomePass" />
<xsd:element name="rnaseqPass" type="topic:RNASeqPass" />

        
</xsd:schema>