package org.broadinstitute.gpinformatics.mercury.control.dao.storage;

import com.google.auth.Credentials;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.storage.Blob;
import com.google.cloud.storage.BlobId;
import com.google.cloud.storage.Storage;
import com.google.cloud.storage.StorageOptions;
import org.broadinstitute.bsp.client.util.MessageCollection;

import javax.ejb.Stateful;
import javax.enterprise.context.RequestScoped;
import java.io.File;
import java.io.FileInputStream;

/**
 * This class accesses Google Storage buckets. For OAuth2 authentication a pre-configured stored
 * credential key is used that authorizes the Mercury server, and no Google login UI is needed.
 */
@RequestScoped
@Stateful
public class GoogleBucketDao {
    private GoogleStorageConfig googleStorageConfig;
    private Credentials credentials;

    /**
     * Authorizes Google Storage access for Mercury as a service account.
     * The credential file is expected to contain the json service account key
     * generated by page https://console.cloud.google.com/apis/credentials
     */
    public boolean authorizeServiceAccountKey(GoogleStorageConfig config, MessageCollection messages) {
        googleStorageConfig = config;
        if (credentials == null) {
            try {
                if (googleStorageConfig == null) {
                    messages.addError("googleStorageConfig is null.");
                    return false;
                }
                File credentialDirectory = new File(googleStorageConfig.getCredentialDirectory());
                if (!credentialDirectory.exists() || !credentialDirectory.isDirectory()) {
                    messages.addError("Google credential directory is missing: \"" +
                            googleStorageConfig.getCredentialDirectory() + "\".");
                    return false;
                }
                File credentialFile = new File(credentialDirectory, googleStorageConfig.getCredentialFilename());
                if (!credentialFile.exists()) {
                    messages.addError("Google credential file is missing: \"" +
                            googleStorageConfig.getCredentialFilename() + "\".");
                    return false;
                }
                credentials = GoogleCredentials.fromStream(new FileInputStream(credentialFile));
            } catch (Exception e) {
                messages.addError("Google service account authorization failed: {2}", e.getMessage());
                return false;
            }
        }
        return (credentials != null);
    }

    /**
     * Reads and returns content of a file as bytes, or null if no such file.
     */
    public byte[] download(String filename) {
        Blob blob = null;
        if (credentials != null) {
            Storage storage = StorageOptions.newBuilder().setCredentials(credentials)
                    .setProjectId(googleStorageConfig.getProject()).build().getService();
            blob = storage.get(BlobId.of(googleStorageConfig.getBucketName(), filename));
        }
        return (blob != null) ? blob.getContent() : null;
    }
}