package org.broadinstitute.gpinformatics.mercury.entity.vessel;

import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * The position of a vessel in a container, e.g. the position of a well in a plate, or the position of a tube in a rack.
 */
public enum VesselPosition {
    A01,
    A02,
    A03,
    A04,
    A05,
    A06,
    A07,
    A08,
    A09,
    A10,
    A11,
    A12,
    A13,
    A14,
    A15,
    A16,
    A17,
    A18,
    A19,
    A20,
    A21,
    A22,
    A23,
    A24,
    A25, //For Hamilton Sample Carrier 1x32
    A26,
    A27,
    A28,
    A29,
    A30,
    A31,
    A32,
    B01,
    B02,
    B03,
    B04,
    B05,
    B06,
    B07,
    B08,
    B09,
    B10,
    B11,
    B12,
    B13,
    B14,
    B15,
    B16,
    B17,
    B18,
    B19,
    B20,
    B21,
    B22,
    B23,
    B24,
    C01,
    C02,
    C03,
    C04,
    C05,
    C06,
    C07,
    C08,
    C09,
    C10,
    C11,
    C12,
    C13,
    C14,
    C15,
    C16,
    C17,
    C18,
    C19,
    C20,
    C21,
    C22,
    C23,
    C24,
    D01,
    D02,
    D03,
    D04,
    D05,
    D06,
    D07,
    D08,
    D09,
    D10,
    D11,
    D12,
    D13,
    D14,
    D15,
    D16,
    D17,
    D18,
    D19,
    D20,
    D21,
    D22,
    D23,
    D24,
    E01,
    E02,
    E03,
    E04,
    E05,
    E06,
    E07,
    E08,
    E09,
    E10,
    E11,
    E12,
    E13,
    E14,
    E15,
    E16,
    E17,
    E18,
    E19,
    E20,
    E21,
    E22,
    E23,
    E24,
    F01,
    F02,
    F03,
    F04,
    F05,
    F06,
    F07,
    F08,
    F09,
    F10,
    F11,
    F12,
    F13,
    F14,
    F15,
    F16,
    F17,
    F18,
    F19,
    F20,
    F21,
    F22,
    F23,
    F24,
    G01,
    G02,
    G03,
    G04,
    G05,
    G06,
    G07,
    G08,
    G09,
    G10,
    G11,
    G12,
    G13,
    G14,
    G15,
    G16,
    G17,
    G18,
    G19,
    G20,
    G21,
    G22,
    G23,
    G24,
    H01,
    H02,
    H03,
    H04,
    H05,
    H06,
    H07,
    H08,
    H09,
    H10,
    H11,
    H12,
    H13,
    H14,
    H15,
    H16,
    H17,
    H18,
    H19,
    H20,
    H21,
    H22,
    H23,
    H24,
    I01,
    I02,
    I03,
    I04,
    I05,
    I06,
    I07,
    I08,
    I09,
    I10,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16,
    I17,
    I18,
    I19,
    I20,
    I21,
    I22,
    I23,
    I24,
    J01,
    J02,
    J03,
    J04,
    J05,
    J06,
    J07,
    J08,
    J09,
    J10,
    J11,
    J12,
    J13,
    J14,
    J15,
    J16,
    J17,
    J18,
    J19,
    J20,
    J21,
    J22,
    J23,
    J24,
    K01,
    K02,
    K03,
    K04,
    K05,
    K06,
    K07,
    K08,
    K09,
    K10,
    K11,
    K12,
    K13,
    K14,
    K15,
    K16,
    K17,
    K18,
    K19,
    K20,
    K21,
    K22,
    K23,
    K24,
    L01,
    L02,
    L03,
    L04,
    L05,
    L06,
    L07,
    L08,
    L09,
    L10,
    L11,
    L12,
    L13,
    L14,
    L15,
    L16,
    L17,
    L18,
    L19,
    L20,
    L21,
    L22,
    L23,
    L24,
    M01,
    M02,
    M03,
    M04,
    M05,
    M06,
    M07,
    M08,
    M09,
    M10,
    M11,
    M12,
    M13,
    M14,
    M15,
    M16,
    M17,
    M18,
    M19,
    M20,
    M21,
    M22,
    M23,
    M24,
    N01,
    N02,
    N03,
    N04,
    N05,
    N06,
    N07,
    N08,
    N09,
    N10,
    N11,
    N12,
    N13,
    N14,
    N15,
    N16,
    N17,
    N18,
    N19,
    N20,
    N21,
    N22,
    N23,
    N24,
    O01,
    O02,
    O03,
    O04,
    O05,
    O06,
    O07,
    O08,
    O09,
    O10,
    O11,
    O12,
    O13,
    O14,
    O15,
    O16,
    O17,
    O18,
    O19,
    O20,
    O21,
    O22,
    O23,
    O24,
    P01,
    P02,
    P03,
    P04,
    P05,
    P06,
    P07,
    P08,
    P09,
    P10,
    P11,
    P12,
    P13,
    P14,
    P15,
    P16,
    P17,
    P18,
    P19,
    P20,
    P21,
    P22,
    P23,
    P24,

    TUBE1,
    TUBE2,
    TUBE3,
    TUBE4,
    TUBE5,
    TUBE6,
    TUBE7,
    TUBE8,

    LANE1,
    LANE2,
    LANE3,
    LANE4,
    LANE5,
    LANE6,
    LANE7,
    LANE8,

    _1_1,
    _2_1,
    _3_1,
    _4_1,
    _5_1,
    _6_1,
    _7_1,
    _8_1,
    _9_1,
    _10_1,
    _11_1,
    _12_1,
    _13_1,
    _14_1,
    _15_1,
    _16_1,
    _17_1,
    _18_1,
    _19_1,
    _20_1,
    _21_1,
    _22_1,
    _23_1,
    _24_1,
    _25_1,
    _26_1,
    _27_1,
    _28_1,
    _29_1,
    _30_1,
    _31_1,
    _32_1,
    _33_1,
    _34_1,
    _35_1,
    _36_1,
    _37_1,
    _38_1,
    _39_1,
    _40_1,
    _41_1,
    _42_1,
    _43_1,
    _44_1,
    _45_1,
    _46_1,
    _47_1,
    _48_1,
    _49_1,
    _50_1,
    _51_1,
    _52_1,
    _53_1,
    _54_1,
    _55_1,
    _56_1,
    _57_1,
    _58_1,
    _59_1,
    _60_1,
    _61_1,
    _62_1,
    _63_1,
    _64_1,
    _65_1,
    _66_1,
    _67_1,
    _68_1,
    _69_1,
    _70_1,
    _71_1,
    _72_1,
    _73_1,
    _74_1,
    _75_1,
    _76_1,
    _77_1,
    _78_1,
    _79_1,
    _80_1,
    _81_1,
    _82_1,
    _83_1,
    _84_1,
    _85_1,
    _86_1,
    _87_1,
    _88_1,
    _89_1,
    _90_1,
    _91_1,
    _92_1,
    _93_1,
    _94_1,
    _95_1,
    _96_1,
    _97_1,
    _98_1,
    _99_1,
    _100_1,
    _1_2,
    _2_2,
    _3_2,
    _4_2,
    _5_2,
    _6_2,
    _7_2,
    _8_2,
    _9_2,
    _10_2,
    _11_2,
    _12_2,
    _13_2,
    _14_2,
    _15_2,
    _16_2,
    _17_2,
    _18_2,
    _19_2,
    _20_2,
    _21_2,
    _22_2,
    _23_2,
    _24_2,
    _25_2,
    _26_2,
    _27_2,
    _28_2,
    _29_2,
    _30_2,
    _31_2,
    _32_2,
    _33_2,
    _34_2,
    _35_2,
    _36_2,
    _37_2,
    _38_2,
    _39_2,
    _40_2,
    _41_2,
    _42_2,
    _43_2,
    _44_2,
    _45_2,
    _46_2,
    _47_2,
    _48_2,
    _49_2,
    _50_2,
    _1_3,
    _2_3,
    _3_3,
    _4_3,
    _5_3,
    _6_3,
    _7_3,
    _8_3,
    _9_3,
    _10_3,
    _1_4,
    _2_4,
    _3_4,
    _4_4,
    _5_4,
    _6_4,
    _7_4,
    _8_4,
    _9_4,
    _10_4,
    _1_5,
    _2_5,
    _3_5,
    _4_5,
    _5_5,
    _6_5,
    _7_5,
    _8_5,
    _9_5,
    _10_5,
    _1_6,
    _2_6,
    _3_6,
    _4_6,
    _5_6,
    _6_6,
    _7_6,
    _8_6,
    _9_6,
    _10_6,
    _1_7,
    _2_7,
    _3_7,
    _4_7,
    _5_7,
    _6_7,
    _7_7,
    _8_7,
    _9_7,
    _10_7,
    _1_8,
    _2_8,
    _3_8,
    _4_8,
    _5_8,
    _6_8,
    _7_8,
    _8_8,
    _9_8,
    _10_8,
    _1_9,
    _2_9,
    _3_9,
    _4_9,
    _5_9,
    _6_9,
    _7_9,
    _8_9,
    _9_9,
    _10_9,
    _1_10,
    _2_10,
    _3_10,
    _4_10,
    _5_10,
    _6_10,
    _7_10,
    _8_10,
    _9_10,
    _10_10,
    _1_11,
    _2_11,
    _3_11,
    _4_11,
    _5_11,
    _6_11,
    _1_12,
    _2_12,
    _3_12,
    _4_12,
    _5_12,
    _6_12;

    private static final Map<String, VesselPosition> MAP_NAME_TO_POSITION =
            new HashMap<>(VesselPosition.values().length);
    private static final Pattern MIDDLE_ZERO_PATTERN = Pattern.compile("([A-Z])0([0-9])");

    static {
        for (VesselPosition vesselPosition : VesselPosition.values()) {
            MAP_NAME_TO_POSITION.put(vesselPosition.name(), vesselPosition);
            // If the name has a zero in the middle, e.g. A01, create a map entry without the zero, e.g. A1
            Matcher matcher = MIDDLE_ZERO_PATTERN.matcher(vesselPosition.name());
            if(matcher.matches()) {
                MAP_NAME_TO_POSITION.put(matcher.group(1) + matcher.group(2), vesselPosition);
            }
        }
    }

    public static VesselPosition getByName(String positionName) {
        return MAP_NAME_TO_POSITION.get(positionName);
    }
}
