<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
           version="3.0">

    <context-param>
        <param-name>javax.faces.PROJECT_STAGE</param-name>
        <param-value>Development</param-value>
    </context-param>

    <!-- BEGIN for JBoss AS 7 -->

    <!-- JAX-RS -->

    <servlet>
        <servlet-name>javax.ws.rs.core.Application</servlet-name>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>javax.ws.rs.core.Application</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <!-- Stripes -->
    <servlet>
        <servlet-name>StripesDispatcher</servlet-name>
        <servlet-class>net.sourceforge.stripes.controller.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>*.xhtml</url-pattern>
    </servlet-mapping>

    <!-- END for JBoss AS 7 -->

    <context-param>
        <param-name>resteasy.scan.resources </param-name>
        <!-- we don't scan for test performance reasons.  use resteasy.resources explicitly instead. -->
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>resteasy.resources</param-name>
        <!-- comma separated list of jax-rs resource classes -->
        <param-value>
            org.broadinstitute.gpinformatics.mercury.boundary.zims.IlluminaRunResource,
            org.broadinstitute.gpinformatics.mercury.boundary.lims.LimsQueryResource,
            org.broadinstitute.gpinformatics.mercury.boundary.lims.LimsQueryTypesResource,
            org.broadinstitute.gpinformatics.mercury.boundary.vessel.LabBatchResource,
            org.broadinstitute.gpinformatics.mercury.boundary.labevent.BettalimsMessageResource,
            org.broadinstitute.gpinformatics.mercury.boundary.labevent.LabEventResource,
            org.broadinstitute.gpinformatics.mercury.boundary.run.SolexaRunResource,
            org.broadinstitute.gpinformatics.athena.boundary.util.PingResource,
	    org.broadinstitute.gpinformatics.infrastructure.datawh.ExtractTransform
        </param-value>
    </context-param>
    <context-param>
        <param-name>resteasy.providers</param-name>
        <param-value>
            org.broadinstitute.gpinformatics.infrastructure.jaxrs.JacksonConfigurator,
            org.broadinstitute.gpinformatics.infrastructure.jaxrs.CatchAllExceptionMapper,
            org.broadinstitute.gpinformatics.infrastructure.jaxrs.EJBExceptionMapper
        </param-value>
    </context-param>

    <security-constraint>
        <web-resource-collection>
            <!-- mlc this is a straight up hack to force JBoss 7.1.1 to create a SecurityConstraint so
                 we can do programmatic authentication.  The url-pattern is a dummy that we intend never to
                 match.  see

                 https://community.jboss.org/thread/161511
            -->
            <web-resource-name>SecuredArea</web-resource-name>
            <url-pattern>/dummy-url/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
        </auth-constraint>
    </security-constraint>

    <welcome-file-list>
        <welcome-file>/security/login.jsp</welcome-file>
    </welcome-file-list>

    <login-config>
        <auth-method>FORM</auth-method>
        <realm-name>crowd_custom_realm</realm-name>
        <form-login-config>
            <form-login-page>/security/login.jsp</form-login-page>
            <form-error-page>/security/login.jsp</form-error-page>
        </form-login-config>
    </login-config>

    <!-- jsp-config>
        <taglib>
            <taglib-uri>http://mercury.broadinstitute.org/authorization</taglib-uri>
            <taglib-location>/WEB-INF/classes/META-INF/mercurysecurity.tld</taglib-location>
        </taglib>
    </jsp-config -->

    <filter>
        <filter-name>AuthorizationFilter</filter-name>
        <filter-class>org.broadinstitute.gpinformatics.mercury.presentation.security.AuthorizationFilter</filter-class>

        <init-param>
            <param-name>error_page</param-name>
            <param-value>/security/authorization_error.jsp</param-value>
        </init-param>
    </filter>

    <filter>
        <display-name>Stripes Filter</display-name>
        <filter-name>StripesFilter</filter-name>
        <filter-class>net.sourceforge.stripes.controller.StripesFilter</filter-class>
        <init-param>
            <param-name>ActionResolver.Packages</param-name>
            <param-value>org.broadinstitute.gpinformatics.athena.presentation, org.broadinstitute.gpinformatics.mercury.presentation</param-value>
        </init-param>
        <init-param>
            <param-name>Extension.Packages</param-name>
            <param-value>com.samaxes.stripes.inject</param-value>
        </init-param>
        <init-param>
            <param-name>ActionBeanContext.Class</param-name>
            <param-value>org.broadinstitute.gpinformatics.mercury.presentation.CoreActionBeanContext</param-value>
        </init-param>
        <init-param>
            <param-name>
                LocalizationBundleFactory.ErrorMessageBundle
            </param-name>
            <param-value>StripesResources</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>StripesFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>StripesFilter</filter-name>
        <servlet-name>StripesDispatcher</servlet-name>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>AuthorizationFilter</filter-name>
        <servlet-name>StripesDispatcher</servlet-name>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>AuthorizationFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <session-config>
		<session-timeout>480</session-timeout>
	</session-config>

    <error-page>
        <error-code>500</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/404.jsp</location>
    </error-page>
    <error-page>
       <exception-type>java.lang.Exception</exception-type>
       <location>/error.jsp</location>
    </error-page>

</web-app>