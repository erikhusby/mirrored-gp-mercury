source ~/.bashrc
umask 0111

#
# Cron job that runs on the Mercury app server machine as part of Mercury ETL to data warehouse.
#
# The script checks the time of the last Extract-Transform from Mercury application by looking at
# the modified date of last_etl_run (not the contents, which might be set in the future).  Mercury
# application will update the file even if no data was extracted.
#
# This script also checks the time of the last ETL Load, i.e. the successful run of dw_etl.cron.
# This is indicated by the last-modified time of dw_etl.log file, which is updated even if no data
# files were found.
#
# If ETL has not been run for a long time it outputs a message which cron sends as an error email.

let hourThresholdForWarning=6

#
# Reads the required params and assigns derived params
#
DB_PARAMS_FILE="$1"

if [ -z "${DB_PARAMS_FILE}" ]; then
    echo "Missing db params filename parameter" >&2
    exit 1
fi
if [ ! -f ${DB_PARAMS_FILE} ]; then
    echo "Cannot find ${DB_PARAMS_FILE}" >&2
    exit 1
fi
ROOT_DIR=`grep -Ei '^rootDir:' ${DB_PARAMS_FILE} | sed -e 's/^rootDir://' | tr -d ' '`
SERVERLOG_DIR=`grep -Ei '^serverLogDir:' ${DB_PARAMS_FILE} | sed -e 's/^serverLogDir://' | tr -d ' '`

NEW_DIR=${ROOT_DIR}/new
DONE_DIR=${ROOT_DIR}/done
LOCKFILE=${NEW_DIR}/.lockfile
LAST_ETL_RUN_FILE=${NEW_DIR}/last_etl_run
LAST_CRON_RUN_FILE=~/dw_etl.log

if [ ! -e ${LAST_ETL_RUN_FILE} ]; then
   echo "Cannot check time of last ExtractTransform.  File is missing: ${LAST_ETL_RUN_FILE}" >&2
   exit 1
fi
if [ ! -e ${LAST_CRON_RUN_FILE} ]; then
   echo "Cannot check time of last ExtractTransform.  File is missing: ${LAST_CRON_RUN_FILE}" >&2
   exit 1
fi
if [ -z "${SERVERLOG_DIR}" -o ! -d "${SERVERLOG_DIR}" ]; then
   echo "Cannot check ETL errors in server.log.  Cannot find directory: \"${SERVERLOG_DIR}\"" >&2
   exit 1
fi

# Gets the last modified timestamps, in seconds since start of the epoch.

let lastExtractTransform=`ls -l --time-style=+%s ${LAST_ETL_RUN_FILE} | cut -d ' ' -f 6`
let lastCronRun=`ls -l --time-style=+%s ${LAST_CRON_RUN_FILE} | cut -d ' ' -f 6`
let now=`date +%s`

let "hourDiff = (now-lastExtractTransform)/(60*60)"
if (( ${hourDiff} > ${hourThresholdForWarning} )); then
   echo "Mercury ETL has not run in ${hourDiff} hours (extracting data from Mercury)." >&2
fi

let "hourDiff = (now-lastCronRun)/(60*60)"
if (( ${hourDiff} > ${hourThresholdForWarning} )); then
   echo "Database ETL script has not run in ${hourDiff} hours (loading data into database)." >&2
fi


# Looks in the log for datawh WARN and ERROR messages that appears since the
# last 4q cron run, which means the previous 6 hours.

TMPFILE="/tmp/dw_etl_4q_output"
if [ -e ${TMPFILE} ]; then
  cat /dev/null > ${TMPFILE}
fi

let thisHour=`date +%k | tr -d ' '`
let startHour=(${thisHour}+24-7)%24
for ((hour24=$startHour; hour24 <= ($startHour+6) ; hour24++))
do
  let hour=${hour24}%24

  if (( ${hour} < 10 )); then
    zeropadHour=0${hour}
  else
    zeropadHour=${hour}
  fi

  # If the hour value is greater than this hour (e.g. it's midnight (hour=0) and we want
  # hours 17-23, then look in yesterday's log.
  if (( $hour > $thisHour )); then
    logfile=${SERVERLOG_DIR}/server.log.`date --date="yesterday" +%Y-%m-%d`
  else
    logfile=${SERVERLOG_DIR}/server.log
  fi

  if [ ! -e ${logfile} ]; then
    echo "Cannot check the Mercury logfile for ETL errors. Expected logfile is missing: ${logfile}" >&2
    break
  else
    grep -E "^${zeropadHour}" ${logfile} | grep datawh | grep -E ' ERROR '\|' WARN  ' >> ${TMPFILE}
  fi

done

if [ -s ${TMPFILE} ]; then
  echo ' ' >&2
  echo ' ' >&2
  echo 'The server log shows these recent ETL messages:' >&2
  echo ' ' >&2
  cat ${TMPFILE} | cut -c 13- | sort -u | sed -e 's/$/\n/' >&2
fi
